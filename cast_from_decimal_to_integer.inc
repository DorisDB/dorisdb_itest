TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal32p9s0ToBooleanNormal) {
    CastTestCaseArray test_cases = {
    {9, 0, "-985804856", -1, -1, "true", "false" },
    {9, 0, "-279848093", -1, -1, "true", "false" },
    {9, 0, "-316053562", -1, -1, "true", "false" },
    {9, 0, "-998007094", -1, -1, "true", "false" },
    {9, 0, "-209902734", -1, -1, "true", "false" },
    {9, 0, "743730572", -1, -1, "true", "false" },
    {9, 0, "38595", -1, -1, "true", "false" },
    {9, 0, "-280834253", -1, -1, "true", "false" },
    {9, 0, "-652846159", -1, -1, "true", "false" },
    {9, 0, "31325085", -1, -1, "true", "false" },
    {9, 0, "-378421687", -1, -1, "true", "false" },
    {9, 0, "-999796516", -1, -1, "true", "false" },
    {9, 0, "410118519", -1, -1, "true", "false" },
    {9, 0, "606678433", -1, -1, "true", "false" },
    {9, 0, "-456494194", -1, -1, "true", "false" },
    {9, 0, "-417369874", -1, -1, "true", "false" },
    {9, 0, "710714342", -1, -1, "true", "false" },
    {9, 0, "-130877075", -1, -1, "true", "false" },
    {9, 0, "-36888623", -1, -1, "true", "false" },
    {9, 0, "-147234325", -1, -1, "true", "false" }
    };
    test_cast_all<TYPE_DECIMAL32, TYPE_BOOLEAN>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal32p9s0ToTinyIntAbnormal) {
    CastTestCaseArray test_cases = {
    {9, 0, "605502594", -1, -1, "", "true" },
    {9, 0, "-286752127", -1, -1, "", "true" },
    {9, 0, "916921875", -1, -1, "", "true" },
    {9, 0, "165337", -1, -1, "", "true" },
    {9, 0, "188839695", -1, -1, "", "true" },
    {9, 0, "-343239928", -1, -1, "", "true" },
    {9, 0, "-999999995", -1, -1, "", "true" },
    {9, 0, "86708194", -1, -1, "", "true" },
    {9, 0, "790956700", -1, -1, "", "true" },
    {9, 0, "-135238034", -1, -1, "", "true" },
    {9, 0, "-987731340", -1, -1, "", "true" },
    {9, 0, "4958817", -1, -1, "", "true" },
    {9, 0, "270040780", -1, -1, "", "true" },
    {9, 0, "-869513169", -1, -1, "", "true" },
    {9, 0, "700854632", -1, -1, "", "true" },
    {9, 0, "-303653335", -1, -1, "", "true" },
    {9, 0, "-986889640", -1, -1, "", "true" },
    {9, 0, "-537260324", -1, -1, "", "true" }
    };
    test_cast_all_fail<TYPE_DECIMAL32, TYPE_TINYINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal32p9s0ToTinyIntNormal) {
    CastTestCaseArray test_cases = {
    {9, 0, "2", -1, -1, "2", "false" }
    };
    test_cast_all<TYPE_DECIMAL32, TYPE_TINYINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal32p9s0ToSmallIntAbnormal) {
    CastTestCaseArray test_cases = {
    {9, 0, "-444785597", -1, -1, "", "true" },
    {9, 0, "803800782", -1, -1, "", "true" },
    {9, 0, "-397979580", -1, -1, "", "true" },
    {9, 0, "765656104", -1, -1, "", "true" },
    {9, 0, "1569148", -1, -1, "", "true" },
    {9, 0, "-834210141", -1, -1, "", "true" },
    {9, 0, "865307293", -1, -1, "", "true" },
    {9, 0, "367663708", -1, -1, "", "true" },
    {9, 0, "8290897", -1, -1, "", "true" },
    {9, 0, "985371505", -1, -1, "", "true" },
    {9, 0, "395995574", -1, -1, "", "true" },
    {9, 0, "23734479", -1, -1, "", "true" },
    {9, 0, "847849081", -1, -1, "", "true" },
    {9, 0, "-224764182", -1, -1, "", "true" },
    {9, 0, "-695084485", -1, -1, "", "true" },
    {9, 0, "-999999686", -1, -1, "", "true" },
    {9, 0, "13334885", -1, -1, "", "true" },
    {9, 0, "791266589", -1, -1, "", "true" },
    {9, 0, "25501868", -1, -1, "", "true" }
    };
    test_cast_all_fail<TYPE_DECIMAL32, TYPE_SMALLINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal32p9s0ToSmallIntNormal) {
    CastTestCaseArray test_cases = {
    {9, 0, "44", -1, -1, "44", "false" }
    };
    test_cast_all<TYPE_DECIMAL32, TYPE_SMALLINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal32p9s0ToIntNormal) {
    CastTestCaseArray test_cases = {
    {9, 0, "0", -1, -1, "0", "false" },
    {9, 0, "201031636", -1, -1, "201031636", "false" },
    {9, 0, "143642379", -1, -1, "143642379", "false" },
    {9, 0, "-99742994", -1, -1, "-99742994", "false" },
    {9, 0, "-161525381", -1, -1, "-161525381", "false" },
    {9, 0, "-527884477", -1, -1, "-527884477", "false" },
    {9, 0, "-23728162", -1, -1, "-23728162", "false" },
    {9, 0, "-999827292", -1, -1, "-999827292", "false" },
    {9, 0, "181824805", -1, -1, "181824805", "false" },
    {9, 0, "-182536425", -1, -1, "-182536425", "false" },
    {9, 0, "479423328", -1, -1, "479423328", "false" },
    {9, 0, "-145730297", -1, -1, "-145730297", "false" },
    {9, 0, "-280233784", -1, -1, "-280233784", "false" },
    {9, 0, "-724772573", -1, -1, "-724772573", "false" },
    {9, 0, "780052698", -1, -1, "780052698", "false" },
    {9, 0, "-170771184", -1, -1, "-170771184", "false" },
    {9, 0, "-742874285", -1, -1, "-742874285", "false" },
    {9, 0, "734784312", -1, -1, "734784312", "false" },
    {9, 0, "-662912909", -1, -1, "-662912909", "false" },
    {9, 0, "20418", -1, -1, "20418", "false" }
    };
    test_cast_all<TYPE_DECIMAL32, TYPE_INT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal32p9s0ToBigIntNormal) {
    CastTestCaseArray test_cases = {
    {9, 0, "-245517624", -1, -1, "-245517624", "false" },
    {9, 0, "239", -1, -1, "239", "false" },
    {9, 0, "267794", -1, -1, "267794", "false" },
    {9, 0, "359062338", -1, -1, "359062338", "false" },
    {9, 0, "424", -1, -1, "424", "false" },
    {9, 0, "-43527857", -1, -1, "-43527857", "false" },
    {9, 0, "-247685988", -1, -1, "-247685988", "false" },
    {9, 0, "-668812539", -1, -1, "-668812539", "false" },
    {9, 0, "-999990792", -1, -1, "-999990792", "false" },
    {9, 0, "699905114", -1, -1, "699905114", "false" },
    {9, 0, "692411587", -1, -1, "692411587", "false" },
    {9, 0, "453431238", -1, -1, "453431238", "false" },
    {9, 0, "-216302086", -1, -1, "-216302086", "false" },
    {9, 0, "160459274", -1, -1, "160459274", "false" },
    {9, 0, "134100115", -1, -1, "134100115", "false" },
    {9, 0, "216485521", -1, -1, "216485521", "false" },
    {9, 0, "94", -1, -1, "94", "false" },
    {9, 0, "347", -1, -1, "347", "false" },
    {9, 0, "-721429130", -1, -1, "-721429130", "false" },
    {9, 0, "-202799719", -1, -1, "-202799719", "false" }
    };
    test_cast_all<TYPE_DECIMAL32, TYPE_BIGINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal32p9s0ToLargeIntNormal) {
    CastTestCaseArray test_cases = {
    {9, 0, "-999999028", -1, -1, "-999999028", "false" },
    {9, 0, "-425320602", -1, -1, "-425320602", "false" },
    {9, 0, "-952085399", -1, -1, "-952085399", "false" },
    {9, 0, "-743792282", -1, -1, "-743792282", "false" },
    {9, 0, "5", -1, -1, "5", "false" },
    {9, 0, "245543337", -1, -1, "245543337", "false" },
    {9, 0, "-138520280", -1, -1, "-138520280", "false" },
    {9, 0, "728434024", -1, -1, "728434024", "false" },
    {9, 0, "-381366246", -1, -1, "-381366246", "false" },
    {9, 0, "727001043", -1, -1, "727001043", "false" },
    {9, 0, "968427941", -1, -1, "968427941", "false" },
    {9, 0, "-126748932", -1, -1, "-126748932", "false" },
    {9, 0, "-572029588", -1, -1, "-572029588", "false" },
    {9, 0, "867465395", -1, -1, "867465395", "false" },
    {9, 0, "987011855", -1, -1, "987011855", "false" },
    {9, 0, "621040643", -1, -1, "621040643", "false" },
    {9, 0, "466389", -1, -1, "466389", "false" },
    {9, 0, "-949310806", -1, -1, "-949310806", "false" },
    {9, 0, "942656219", -1, -1, "942656219", "false" },
    {9, 0, "-206745765", -1, -1, "-206745765", "false" }
    };
    test_cast_all<TYPE_DECIMAL32, TYPE_LARGEINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal32p9s2ToBooleanNormal) {
    CastTestCaseArray test_cases = {
    {9, 2, "-6996368.05", -1, -1, "true", "false" },
    {9, 2, "9194936.38", -1, -1, "true", "false" },
    {9, 2, "378950.39", -1, -1, "true", "false" },
    {9, 2, "7920953.36", -1, -1, "true", "false" },
    {9, 2, "9831581.96", -1, -1, "true", "false" },
    {9, 2, "-9999895.36", -1, -1, "true", "false" },
    {9, 2, "7578967.94", -1, -1, "true", "false" },
    {9, 2, "-8284741.22", -1, -1, "true", "false" },
    {9, 2, "-3021656.86", -1, -1, "true", "false" },
    {9, 2, "8201507.54", -1, -1, "true", "false" },
    {9, 2, "1563522.15", -1, -1, "true", "false" },
    {9, 2, "-8271813.56", -1, -1, "true", "false" },
    {9, 2, "-24152.73", -1, -1, "true", "false" },
    {9, 2, "-4905653.03", -1, -1, "true", "false" },
    {9, 2, "7684582.00", -1, -1, "true", "false" },
    {9, 2, "-9366485.18", -1, -1, "true", "false" },
    {9, 2, "9327378.97", -1, -1, "true", "false" },
    {9, 2, "-2978132.89", -1, -1, "true", "false" },
    {9, 2, "-3097244.07", -1, -1, "true", "false" },
    {9, 2, "-6501238.16", -1, -1, "true", "false" }
    };
    test_cast_all<TYPE_DECIMAL32, TYPE_BOOLEAN>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal32p9s2ToTinyIntAbnormal) {
    CastTestCaseArray test_cases = {
    {9, 2, "-9999999.96", -1, -1, "", "true" },
    {9, 2, "-9999869.23", -1, -1, "", "true" },
    {9, 2, "9543951.39", -1, -1, "", "true" },
    {9, 2, "167451.16", -1, -1, "", "true" },
    {9, 2, "-9999938.15", -1, -1, "", "true" },
    {9, 2, "6820910.09", -1, -1, "", "true" },
    {9, 2, "8025075.83", -1, -1, "", "true" },
    {9, 2, "-2902122.50", -1, -1, "", "true" },
    {9, 2, "-9999977.59", -1, -1, "", "true" },
    {9, 2, "5487245.22", -1, -1, "", "true" },
    {9, 2, "2337685.25", -1, -1, "", "true" },
    {9, 2, "-4856017.86", -1, -1, "", "true" },
    {9, 2, "-3047630.21", -1, -1, "", "true" },
    {9, 2, "2324891.90", -1, -1, "", "true" },
    {9, 2, "-9999703.86", -1, -1, "", "true" },
    {9, 2, "-3082828.75", -1, -1, "", "true" },
    {9, 2, "5895753.75", -1, -1, "", "true" },
    {9, 2, "7269177.53", -1, -1, "", "true" },
    {9, 2, "-2797168.51", -1, -1, "", "true" }
    };
    test_cast_all_fail<TYPE_DECIMAL32, TYPE_TINYINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal32p9s2ToTinyIntNormal) {
    CastTestCaseArray test_cases = {
    {9, 2, "49.30", -1, -1, "49", "false" }
    };
    test_cast_all<TYPE_DECIMAL32, TYPE_TINYINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal32p9s2ToSmallIntAbnormal) {
    CastTestCaseArray test_cases = {
    {9, 2, "5271855.79", -1, -1, "", "true" },
    {9, 2, "8393354.60", -1, -1, "", "true" },
    {9, 2, "-2536759.98", -1, -1, "", "true" },
    {9, 2, "4342984.36", -1, -1, "", "true" },
    {9, 2, "-7635929.14", -1, -1, "", "true" },
    {9, 2, "133710.86", -1, -1, "", "true" },
    {9, 2, "9889781.08", -1, -1, "", "true" },
    {9, 2, "-2104253.12", -1, -1, "", "true" },
    {9, 2, "1828937.19", -1, -1, "", "true" },
    {9, 2, "-6348465.26", -1, -1, "", "true" },
    {9, 2, "-6274644.10", -1, -1, "", "true" },
    {9, 2, "-9912053.34", -1, -1, "", "true" },
    {9, 2, "-6283246.21", -1, -1, "", "true" },
    {9, 2, "8273417.49", -1, -1, "", "true" },
    {9, 2, "5304866.08", -1, -1, "", "true" },
    {9, 2, "9239850.68", -1, -1, "", "true" },
    {9, 2, "-2382799.51", -1, -1, "", "true" }
    };
    test_cast_all_fail<TYPE_DECIMAL32, TYPE_SMALLINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal32p9s2ToSmallIntNormal) {
    CastTestCaseArray test_cases = {
    {9, 2, "8268.79", -1, -1, "8268", "false" },
    {9, 2, "5.84", -1, -1, "5", "false" },
    {9, 2, "0.13", -1, -1, "0", "false" }
    };
    test_cast_all<TYPE_DECIMAL32, TYPE_SMALLINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal32p9s2ToIntNormal) {
    CastTestCaseArray test_cases = {
    {9, 2, "9540600.69", -1, -1, "9540600", "false" },
    {9, 2, "5217014.32", -1, -1, "5217014", "false" },
    {9, 2, "8805969.31", -1, -1, "8805969", "false" },
    {9, 2, "-9952636.37", -1, -1, "-9952636", "false" },
    {9, 2, "-8722420.49", -1, -1, "-8722420", "false" },
    {9, 2, "-9999968.77", -1, -1, "-9999968", "false" },
    {9, 2, "41595.69", -1, -1, "41595", "false" },
    {9, 2, "-9998384.62", -1, -1, "-9998384", "false" },
    {9, 2, "-8889426.65", -1, -1, "-8889426", "false" },
    {9, 2, "-8349801.77", -1, -1, "-8349801", "false" },
    {9, 2, "35613.89", -1, -1, "35613", "false" },
    {9, 2, "-5477575.66", -1, -1, "-5477575", "false" },
    {9, 2, "148707.73", -1, -1, "148707", "false" },
    {9, 2, "-9999999.70", -1, -1, "-9999999", "false" },
    {9, 2, "1818248.05", -1, -1, "1818248", "false" },
    {9, 2, "-3621921.58", -1, -1, "-3621921", "false" },
    {9, 2, "4930803.05", -1, -1, "4930803", "false" },
    {9, 2, "0.51", -1, -1, "0", "false" },
    {9, 2, "6110687.38", -1, -1, "6110687", "false" },
    {9, 2, "5435053.40", -1, -1, "5435053", "false" }
    };
    test_cast_all<TYPE_DECIMAL32, TYPE_INT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal32p9s2ToBigIntNormal) {
    CastTestCaseArray test_cases = {
    {9, 2, "9499468.54", -1, -1, "9499468", "false" },
    {9, 2, "6916704.07", -1, -1, "6916704", "false" },
    {9, 2, "6790006.23", -1, -1, "6790006", "false" },
    {9, 2, "3887414.99", -1, -1, "3887414", "false" },
    {9, 2, "4096961.55", -1, -1, "4096961", "false" },
    {9, 2, "-654349.01", -1, -1, "-654349", "false" },
    {9, 2, "-1871049.25", -1, -1, "-1871049", "false" },
    {9, 2, "2211122.47", -1, -1, "2211122", "false" },
    {9, 2, "-9999513.64", -1, -1, "-9999513", "false" },
    {9, 2, "0.19", -1, -1, "0", "false" },
    {9, 2, "-9129025.30", -1, -1, "-9129025", "false" },
    {9, 2, "7260821.12", -1, -1, "7260821", "false" },
    {9, 2, "-3159644.91", -1, -1, "-3159644", "false" },
    {9, 2, "7853468.67", -1, -1, "7853468", "false" },
    {9, 2, "1.11", -1, -1, "1", "false" },
    {9, 2, "-901826.33", -1, -1, "-901826", "false" },
    {9, 2, "-7233714.36", -1, -1, "-7233714", "false" },
    {9, 2, "-5248939.58", -1, -1, "-5248939", "false" },
    {9, 2, "-8823010.19", -1, -1, "-8823010", "false" },
    {9, 2, "-9835488.55", -1, -1, "-9835488", "false" }
    };
    test_cast_all<TYPE_DECIMAL32, TYPE_BIGINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal32p9s2ToLargeIntNormal) {
    CastTestCaseArray test_cases = {
    {9, 2, "-2300509.48", -1, -1, "-2300509", "false" },
    {9, 2, "9212897.15", -1, -1, "9212897", "false" },
    {9, 2, "8026575.38", -1, -1, "8026575", "false" },
    {9, 2, "3836293.82", -1, -1, "3836293", "false" },
    {9, 2, "-7625737.12", -1, -1, "-7625737", "false" },
    {9, 2, "-6703044.87", -1, -1, "-6703044", "false" },
    {9, 2, "-9953527.62", -1, -1, "-9953527", "false" },
    {9, 2, "-9999994.90", -1, -1, "-9999994", "false" },
    {9, 2, "1466475.86", -1, -1, "1466475", "false" },
    {9, 2, "7400046.20", -1, -1, "7400046", "false" },
    {9, 2, "8721373.08", -1, -1, "8721373", "false" },
    {9, 2, "-6646582.70", -1, -1, "-6646582", "false" },
    {9, 2, "-1757463.53", -1, -1, "-1757463", "false" },
    {9, 2, "8490563.19", -1, -1, "8490563", "false" },
    {9, 2, "-2960865.24", -1, -1, "-2960865", "false" },
    {9, 2, "-9456746.89", -1, -1, "-9456746", "false" },
    {9, 2, "2828751.29", -1, -1, "2828751", "false" },
    {9, 2, "-5475012.17", -1, -1, "-5475012", "false" },
    {9, 2, "-7260308.46", -1, -1, "-7260308", "false" },
    {9, 2, "9810297.63", -1, -1, "9810297", "false" }
    };
    test_cast_all<TYPE_DECIMAL32, TYPE_LARGEINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal32p9s9ToBooleanNormal) {
    CastTestCaseArray test_cases = {
    {9, 9, "0.856735011", -1, -1, "true", "false" },
    {9, 9, "0.037521458", -1, -1, "true", "false" },
    {9, 9, "0.123259717", -1, -1, "true", "false" },
    {9, 9, "0.000001751", -1, -1, "true", "false" },
    {9, 9, "0.499341822", -1, -1, "true", "false" },
    {9, 9, "-0.807309134", -1, -1, "true", "false" },
    {9, 9, "0.270666369", -1, -1, "true", "false" },
    {9, 9, "0.495705903", -1, -1, "true", "false" },
    {9, 9, "-0.432702244", -1, -1, "true", "false" },
    {9, 9, "0.910866610", -1, -1, "true", "false" },
    {9, 9, "-0.896451271", -1, -1, "true", "false" },
    {9, 9, "0.631280554", -1, -1, "true", "false" },
    {9, 9, "-0.391679518", -1, -1, "true", "false" },
    {9, 9, "1.4E-8", -1, -1, "true", "false" },
    {9, 9, "0.197361117", -1, -1, "true", "false" },
    {9, 9, "-0.956948392", -1, -1, "true", "false" },
    {9, 9, "0.386645960", -1, -1, "true", "false" },
    {9, 9, "-0.181034168", -1, -1, "true", "false" },
    {9, 9, "0.818442399", -1, -1, "true", "false" },
    {9, 9, "-0.150514334", -1, -1, "true", "false" }
    };
    test_cast_all<TYPE_DECIMAL32, TYPE_BOOLEAN>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal32p9s9ToTinyIntNormal) {
    CastTestCaseArray test_cases = {
    {9, 9, "0.542833075", -1, -1, "0", "false" },
    {9, 9, "-0.759897375", -1, -1, "0", "false" },
    {9, 9, "-0.063431350", -1, -1, "0", "false" },
    {9, 9, "0.524316060", -1, -1, "0", "false" },
    {9, 9, "0.930750165", -1, -1, "0", "false" },
    {9, 9, "2.4E-8", -1, -1, "0", "false" },
    {9, 9, "0.971835455", -1, -1, "0", "false" },
    {9, 9, "-0.999999901", -1, -1, "0", "false" },
    {9, 9, "0.901589979", -1, -1, "0", "false" },
    {9, 9, "0.902712506", -1, -1, "0", "false" },
    {9, 9, "-0.678217426", -1, -1, "0", "false" },
    {9, 9, "-0.993434356", -1, -1, "0", "false" },
    {9, 9, "0.132057792", -1, -1, "0", "false" },
    {9, 9, "-0.302145565", -1, -1, "0", "false" },
    {9, 9, "-0.353542108", -1, -1, "0", "false" },
    {9, 9, "0.283254692", -1, -1, "0", "false" },
    {9, 9, "-0.226949163", -1, -1, "0", "false" },
    {9, 9, "0.272694258", -1, -1, "0", "false" },
    {9, 9, "0.930030040", -1, -1, "0", "false" },
    {9, 9, "-0.062081998", -1, -1, "0", "false" }
    };
    test_cast_all<TYPE_DECIMAL32, TYPE_TINYINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal32p9s9ToSmallIntNormal) {
    CastTestCaseArray test_cases = {
    {9, 9, "-0.256434586", -1, -1, "0", "false" },
    {9, 9, "0.206320258", -1, -1, "0", "false" },
    {9, 9, "-0.113726072", -1, -1, "0", "false" },
    {9, 9, "-0.983423899", -1, -1, "0", "false" },
    {9, 9, "-0.480013336", -1, -1, "0", "false" },
    {9, 9, "0.748616126", -1, -1, "0", "false" },
    {9, 9, "-0.999999968", -1, -1, "0", "false" },
    {9, 9, "-0.995579418", -1, -1, "0", "false" },
    {9, 9, "-0.454360505", -1, -1, "0", "false" },
    {9, 9, "-0.681325830", -1, -1, "0", "false" },
    {9, 9, "0.115036379", -1, -1, "0", "false" },
    {9, 9, "-0.548005841", -1, -1, "0", "false" },
    {9, 9, "-0.495519877", -1, -1, "0", "false" },
    {9, 9, "-0.757364973", -1, -1, "0", "false" },
    {9, 9, "-0.386817084", -1, -1, "0", "false" },
    {9, 9, "0.177073422", -1, -1, "0", "false" },
    {9, 9, "0.838235948", -1, -1, "0", "false" },
    {9, 9, "-0.469479220", -1, -1, "0", "false" },
    {9, 9, "0.000179280", -1, -1, "0", "false" },
    {9, 9, "0.000487577", -1, -1, "0", "false" }
    };
    test_cast_all<TYPE_DECIMAL32, TYPE_SMALLINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal32p9s9ToIntNormal) {
    CastTestCaseArray test_cases = {
    {9, 9, "-0.283667068", -1, -1, "0", "false" },
    {9, 9, "0.858341926", -1, -1, "0", "false" },
    {9, 9, "-0.389941726", -1, -1, "0", "false" },
    {9, 9, "-0.999834200", -1, -1, "0", "false" },
    {9, 9, "0.598963507", -1, -1, "0", "false" },
    {9, 9, "0.677706642", -1, -1, "0", "false" },
    {9, 9, "-0.534365551", -1, -1, "0", "false" },
    {9, 9, "0.805398809", -1, -1, "0", "false" },
    {9, 9, "-0.466526492", -1, -1, "0", "false" },
    {9, 9, "-0.426063952", -1, -1, "0", "false" },
    {9, 9, "8.31E-7", -1, -1, "0", "false" },
    {9, 9, "-0.999999967", -1, -1, "0", "false" },
    {9, 9, "0.206283471", -1, -1, "0", "false" },
    {9, 9, "-0.263230528", -1, -1, "0", "false" },
    {9, 9, "0.881796112", -1, -1, "0", "false" },
    {9, 9, "0.874550043", -1, -1, "0", "false" },
    {9, 9, "-0.069849034", -1, -1, "0", "false" },
    {9, 9, "-0.135822185", -1, -1, "0", "false" },
    {9, 9, "0.168330090", -1, -1, "0", "false" },
    {9, 9, "-0.247037283", -1, -1, "0", "false" }
    };
    test_cast_all<TYPE_DECIMAL32, TYPE_INT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal32p9s9ToBigIntNormal) {
    CastTestCaseArray test_cases = {
    {9, 9, "0.976290635", -1, -1, "0", "false" },
    {9, 9, "-0.329108432", -1, -1, "0", "false" },
    {9, 9, "-0.496323529", -1, -1, "0", "false" },
    {9, 9, "-0.999999951", -1, -1, "0", "false" },
    {9, 9, "0.865560279", -1, -1, "0", "false" },
    {9, 9, "5.4E-8", -1, -1, "0", "false" },
    {9, 9, "0.000008996", -1, -1, "0", "false" },
    {9, 9, "-0.350407465", -1, -1, "0", "false" },
    {9, 9, "0.723959816", -1, -1, "0", "false" },
    {9, 9, "0.936325255", -1, -1, "0", "false" },
    {9, 9, "-0.813135564", -1, -1, "0", "false" },
    {9, 9, "-0.879623753", -1, -1, "0", "false" },
    {9, 9, "-0.360989030", -1, -1, "0", "false" },
    {9, 9, "0.851291700", -1, -1, "0", "false" },
    {9, 9, "-0.873563998", -1, -1, "0", "false" },
    {9, 9, "3E-9", -1, -1, "0", "false" },
    {9, 9, "0.238852803", -1, -1, "0", "false" },
    {9, 9, "-0.957965593", -1, -1, "0", "false" },
    {9, 9, "-0.723830950", -1, -1, "0", "false" },
    {9, 9, "0.466414973", -1, -1, "0", "false" }
    };
    test_cast_all<TYPE_DECIMAL32, TYPE_BIGINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal32p9s9ToLargeIntNormal) {
    CastTestCaseArray test_cases = {
    {9, 9, "0.547980912", -1, -1, "0", "false" },
    {9, 9, "0.645946212", -1, -1, "0", "false" },
    {9, 9, "0.005159663", -1, -1, "0", "false" },
    {9, 9, "0.218109165", -1, -1, "0", "false" },
    {9, 9, "-0.257723112", -1, -1, "0", "false" },
    {9, 9, "0.023953515", -1, -1, "0", "false" },
    {9, 9, "0.615215977", -1, -1, "0", "false" },
    {9, 9, "-0.262943596", -1, -1, "0", "false" },
    {9, 9, "-0.999996379", -1, -1, "0", "false" },
    {9, 9, "0.306789939", -1, -1, "0", "false" },
    {9, 9, "0.177535284", -1, -1, "0", "false" },
    {9, 9, "-0.705127305", -1, -1, "0", "false" },
    {9, 9, "-0.269382401", -1, -1, "0", "false" },
    {9, 9, "0.205821741", -1, -1, "0", "false" },
    {9, 9, "0.042447361", -1, -1, "0", "false" },
    {9, 9, "-0.298339488", -1, -1, "0", "false" },
    {9, 9, "-0.437323399", -1, -1, "0", "false" },
    {9, 9, "-0.724447054", -1, -1, "0", "false" },
    {9, 9, "-0.280508502", -1, -1, "0", "false" },
    {9, 9, "-0.387298092", -1, -1, "0", "false" }
    };
    test_cast_all<TYPE_DECIMAL32, TYPE_LARGEINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal32p7s4ToBooleanNormal) {
    CastTestCaseArray test_cases = {
    {7, 4, "-373.3128", -1, -1, "true", "false" },
    {7, 4, "-156.8444", -1, -1, "true", "false" },
    {7, 4, "0.0065", -1, -1, "true", "false" },
    {7, 4, "-140.7690", -1, -1, "true", "false" },
    {7, 4, "-35.7918", -1, -1, "true", "false" },
    {7, 4, "-113.4896", -1, -1, "true", "false" },
    {7, 4, "-997.0549", -1, -1, "true", "false" },
    {7, 4, "452.5588", -1, -1, "true", "false" },
    {7, 4, "-596.9932", -1, -1, "true", "false" },
    {7, 4, "427.2139", -1, -1, "true", "false" },
    {7, 4, "-765.4473", -1, -1, "true", "false" },
    {7, 4, "-212.4464", -1, -1, "true", "false" },
    {7, 4, "-101.6530", -1, -1, "true", "false" },
    {7, 4, "-52.1162", -1, -1, "true", "false" },
    {7, 4, "-998.4658", -1, -1, "true", "false" },
    {7, 4, "387.5558", -1, -1, "true", "false" },
    {7, 4, "-948.2423", -1, -1, "true", "false" },
    {7, 4, "-383.2409", -1, -1, "true", "false" },
    {7, 4, "-628.8595", -1, -1, "true", "false" },
    {7, 4, "644.9703", -1, -1, "true", "false" }
    };
    test_cast_all<TYPE_DECIMAL32, TYPE_BOOLEAN>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal32p7s4ToTinyIntAbnormal) {
    CastTestCaseArray test_cases = {
    {7, 4, "-361.6531", -1, -1, "", "true" },
    {7, 4, "141.7919", -1, -1, "", "true" },
    {7, 4, "776.5858", -1, -1, "", "true" },
    {7, 4, "842.7347", -1, -1, "", "true" },
    {7, 4, "169.1737", -1, -1, "", "true" },
    {7, 4, "-969.4388", -1, -1, "", "true" },
    {7, 4, "624.5131", -1, -1, "", "true" },
    {7, 4, "-791.3865", -1, -1, "", "true" },
    {7, 4, "-397.8369", -1, -1, "", "true" },
    {7, 4, "-590.5079", -1, -1, "", "true" },
    {7, 4, "-238.7716", -1, -1, "", "true" },
    {7, 4, "-694.2378", -1, -1, "", "true" }
    };
    test_cast_all_fail<TYPE_DECIMAL32, TYPE_TINYINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal32p7s4ToTinyIntNormal) {
    CastTestCaseArray test_cases = {
    {7, 4, "18.9813", -1, -1, "18", "false" },
    {7, 4, "83.7989", -1, -1, "83", "false" },
    {7, 4, "99.9698", -1, -1, "99", "false" },
    {7, 4, "0.0004", -1, -1, "0", "false" },
    {7, 4, "2.4922", -1, -1, "2", "false" },
    {7, 4, "23.8213", -1, -1, "23", "false" },
    {7, 4, "0.0007", -1, -1, "0", "false" },
    {7, 4, "74.8839", -1, -1, "74", "false" }
    };
    test_cast_all<TYPE_DECIMAL32, TYPE_TINYINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal32p7s4ToSmallIntNormal) {
    CastTestCaseArray test_cases = {
    {7, 4, "-403.2898", -1, -1, "-403", "false" },
    {7, 4, "779.2956", -1, -1, "779", "false" },
    {7, 4, "-11.0349", -1, -1, "-11", "false" },
    {7, 4, "0.7159", -1, -1, "0", "false" },
    {7, 4, "587.0521", -1, -1, "587", "false" },
    {7, 4, "44.5318", -1, -1, "44", "false" },
    {7, 4, "382.2575", -1, -1, "382", "false" },
    {7, 4, "-936.4111", -1, -1, "-936", "false" },
    {7, 4, "178.8233", -1, -1, "178", "false" },
    {7, 4, "46.2569", -1, -1, "46", "false" },
    {7, 4, "-22.8100", -1, -1, "-22", "false" },
    {7, 4, "-824.4335", -1, -1, "-824", "false" },
    {7, 4, "903.9880", -1, -1, "903", "false" },
    {7, 4, "689.3492", -1, -1, "689", "false" },
    {7, 4, "984.6129", -1, -1, "984", "false" },
    {7, 4, "-211.0037", -1, -1, "-211", "false" },
    {7, 4, "133.9386", -1, -1, "133", "false" },
    {7, 4, "206.0609", -1, -1, "206", "false" },
    {7, 4, "363.3118", -1, -1, "363", "false" },
    {7, 4, "-684.4928", -1, -1, "-684", "false" }
    };
    test_cast_all<TYPE_DECIMAL32, TYPE_SMALLINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal32p7s4ToIntNormal) {
    CastTestCaseArray test_cases = {
    {7, 4, "-401.4228", -1, -1, "-401", "false" },
    {7, 4, "600.5355", -1, -1, "600", "false" },
    {7, 4, "-410.9161", -1, -1, "-410", "false" },
    {7, 4, "-671.4844", -1, -1, "-671", "false" },
    {7, 4, "534.0823", -1, -1, "534", "false" },
    {7, 4, "-73.7607", -1, -1, "-73", "false" },
    {7, 4, "-999.9743", -1, -1, "-999", "false" },
    {7, 4, "-999.9938", -1, -1, "-999", "false" },
    {7, 4, "0.0026", -1, -1, "0", "false" },
    {7, 4, "19.5661", -1, -1, "19", "false" },
    {7, 4, "-864.5397", -1, -1, "-864", "false" },
    {7, 4, "-914.8199", -1, -1, "-914", "false" },
    {7, 4, "776.4096", -1, -1, "776", "false" },
    {7, 4, "287.5799", -1, -1, "287", "false" },
    {7, 4, "-999.6644", -1, -1, "-999", "false" },
    {7, 4, "-640.4108", -1, -1, "-640", "false" },
    {7, 4, "-310.0009", -1, -1, "-310", "false" },
    {7, 4, "398.1787", -1, -1, "398", "false" },
    {7, 4, "-299.6889", -1, -1, "-299", "false" },
    {7, 4, "77.4635", -1, -1, "77", "false" }
    };
    test_cast_all<TYPE_DECIMAL32, TYPE_INT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal32p7s4ToBigIntNormal) {
    CastTestCaseArray test_cases = {
    {7, 4, "377.4617", -1, -1, "377", "false" },
    {7, 4, "638.3467", -1, -1, "638", "false" },
    {7, 4, "-999.9983", -1, -1, "-999", "false" },
    {7, 4, "-504.0138", -1, -1, "-504", "false" },
    {7, 4, "-999.9994", -1, -1, "-999", "false" },
    {7, 4, "-716.8498", -1, -1, "-716", "false" },
    {7, 4, "178.3866", -1, -1, "178", "false" },
    {7, 4, "-652.9884", -1, -1, "-652", "false" },
    {7, 4, "-908.5891", -1, -1, "-908", "false" },
    {7, 4, "-906.6460", -1, -1, "-906", "false" },
    {7, 4, "557.4183", -1, -1, "557", "false" },
    {7, 4, "452.7416", -1, -1, "452", "false" },
    {7, 4, "706.1175", -1, -1, "706", "false" },
    {7, 4, "-544.9078", -1, -1, "-544", "false" },
    {7, 4, "464.6760", -1, -1, "464", "false" },
    {7, 4, "-414.9267", -1, -1, "-414", "false" },
    {7, 4, "0.7688", -1, -1, "0", "false" },
    {7, 4, "642.4047", -1, -1, "642", "false" },
    {7, 4, "-655.2350", -1, -1, "-655", "false" },
    {7, 4, "235.0891", -1, -1, "235", "false" }
    };
    test_cast_all<TYPE_DECIMAL32, TYPE_BIGINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal32p7s4ToLargeIntNormal) {
    CastTestCaseArray test_cases = {
    {7, 4, "386.8108", -1, -1, "386", "false" },
    {7, 4, "0.1342", -1, -1, "0", "false" },
    {7, 4, "0.0008", -1, -1, "0", "false" },
    {7, 4, "-750.1137", -1, -1, "-750", "false" },
    {7, 4, "-912.7679", -1, -1, "-912", "false" },
    {7, 4, "0.0000", -1, -1, "0", "false" },
    {7, 4, "-829.6059", -1, -1, "-829", "false" },
    {7, 4, "826.7481", -1, -1, "826", "false" },
    {7, 4, "0.0001", -1, -1, "0", "false" },
    {7, 4, "116.6333", -1, -1, "116", "false" },
    {7, 4, "599.7987", -1, -1, "599", "false" },
    {7, 4, "-642.8497", -1, -1, "-642", "false" },
    {7, 4, "-957.9325", -1, -1, "-957", "false" },
    {7, 4, "-64.0118", -1, -1, "-64", "false" },
    {7, 4, "956.9464", -1, -1, "956", "false" },
    {7, 4, "536.1421", -1, -1, "536", "false" },
    {7, 4, "-329.0420", -1, -1, "-329", "false" },
    {7, 4, "113.1013", -1, -1, "113", "false" },
    {7, 4, "-199.6264", -1, -1, "-199", "false" },
    {7, 4, "820.6298", -1, -1, "820", "false" }
    };
    test_cast_all<TYPE_DECIMAL32, TYPE_LARGEINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal64p18s0ToBooleanNormal) {
    CastTestCaseArray test_cases = {
    {18, 0, "-988229915042023373", -1, -1, "true", "false" },
    {18, 0, "-675435532689367177", -1, -1, "true", "false" },
    {18, 0, "88265780184675283", -1, -1, "true", "false" },
    {18, 0, "-777689350498369008", -1, -1, "true", "false" },
    {18, 0, "-696043183912223612", -1, -1, "true", "false" },
    {18, 0, "-982712446186593419", -1, -1, "true", "false" },
    {18, 0, "-185600660072220437", -1, -1, "true", "false" },
    {18, 0, "-543888253546172340", -1, -1, "true", "false" },
    {18, 0, "-999999999967230653", -1, -1, "true", "false" },
    {18, 0, "-999999998316547259", -1, -1, "true", "false" },
    {18, 0, "797857985192063312", -1, -1, "true", "false" },
    {18, 0, "-999999999977883948", -1, -1, "true", "false" },
    {18, 0, "-490149576849308776", -1, -1, "true", "false" },
    {18, 0, "-999999934537994473", -1, -1, "true", "false" },
    {18, 0, "9", -1, -1, "true", "false" },
    {18, 0, "-999999999977148690", -1, -1, "true", "false" },
    {18, 0, "435157410329326465", -1, -1, "true", "false" },
    {18, 0, "-999999999936323567", -1, -1, "true", "false" },
    {18, 0, "-880901946663840558", -1, -1, "true", "false" },
    {18, 0, "-549532198295160271", -1, -1, "true", "false" }
    };
    test_cast_all<TYPE_DECIMAL64, TYPE_BOOLEAN>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal64p18s0ToTinyIntAbnormal) {
    CastTestCaseArray test_cases = {
    {18, 0, "3723867794", -1, -1, "", "true" },
    {18, 0, "1213", -1, -1, "", "true" },
    {18, 0, "-414760927446278438", -1, -1, "", "true" },
    {18, 0, "716534", -1, -1, "", "true" },
    {18, 0, "10021891", -1, -1, "", "true" },
    {18, 0, "-999993425453956997", -1, -1, "", "true" },
    {18, 0, "-999999999999999791", -1, -1, "", "true" },
    {18, 0, "921560355282329901", -1, -1, "", "true" },
    {18, 0, "-624678717621018960", -1, -1, "", "true" },
    {18, 0, "-999999999999855309", -1, -1, "", "true" },
    {18, 0, "949524069263293053", -1, -1, "", "true" },
    {18, 0, "15314360", -1, -1, "", "true" },
    {18, 0, "496037792784273263", -1, -1, "", "true" },
    {18, 0, "-639450062651030724", -1, -1, "", "true" },
    {18, 0, "691806645767367297", -1, -1, "", "true" },
    {18, 0, "6571394287277465", -1, -1, "", "true" },
    {18, 0, "-505115889213866844", -1, -1, "", "true" },
    {18, 0, "-999999999999413121", -1, -1, "", "true" }
    };
    test_cast_all_fail<TYPE_DECIMAL64, TYPE_TINYINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal64p18s0ToTinyIntNormal) {
    CastTestCaseArray test_cases = {
    {18, 0, "31", -1, -1, "31", "false" },
    {18, 0, "1", -1, -1, "1", "false" }
    };
    test_cast_all<TYPE_DECIMAL64, TYPE_TINYINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal64p18s0ToSmallIntAbnormal) {
    CastTestCaseArray test_cases = {
    {18, 0, "-231736280331810614", -1, -1, "", "true" },
    {18, 0, "-587904943241214089", -1, -1, "", "true" },
    {18, 0, "171639545", -1, -1, "", "true" },
    {18, 0, "52679", -1, -1, "", "true" },
    {18, 0, "28059708736269604", -1, -1, "", "true" },
    {18, 0, "-220051077354962884", -1, -1, "", "true" },
    {18, 0, "-619368028644957175", -1, -1, "", "true" },
    {18, 0, "738940286430260517", -1, -1, "", "true" },
    {18, 0, "-999992352823989764", -1, -1, "", "true" },
    {18, 0, "902806197977256567", -1, -1, "", "true" },
    {18, 0, "419525842435156138", -1, -1, "", "true" },
    {18, 0, "-921831813305230202", -1, -1, "", "true" },
    {18, 0, "618736366608962582", -1, -1, "", "true" },
    {18, 0, "-999342950784478890", -1, -1, "", "true" },
    {18, 0, "-661259271567046738", -1, -1, "", "true" },
    {18, 0, "929366807562186", -1, -1, "", "true" }
    };
    test_cast_all_fail<TYPE_DECIMAL64, TYPE_SMALLINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal64p18s0ToSmallIntNormal) {
    CastTestCaseArray test_cases = {
    {18, 0, "777", -1, -1, "777", "false" },
    {18, 0, "4838", -1, -1, "4838", "false" },
    {18, 0, "2", -1, -1, "2", "false" },
    {18, 0, "8", -1, -1, "8", "false" }
    };
    test_cast_all<TYPE_DECIMAL64, TYPE_SMALLINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal64p18s0ToIntAbnormal) {
    CastTestCaseArray test_cases = {
    {18, 0, "-999999999999999744", -1, -1, "", "true" },
    {18, 0, "-998425842255706432", -1, -1, "", "true" },
    {18, 0, "798050935571001088", -1, -1, "", "true" },
    {18, 0, "33604480863", -1, -1, "", "true" },
    {18, 0, "172363055677471695", -1, -1, "", "true" },
    {18, 0, "-999999999614815936", -1, -1, "", "true" },
    {18, 0, "713056924584170250", -1, -1, "", "true" },
    {18, 0, "-210724243843906334", -1, -1, "", "true" },
    {18, 0, "582086486027967209", -1, -1, "", "true" },
    {18, 0, "-963211802275179154", -1, -1, "", "true" },
    {18, 0, "99146631046074904", -1, -1, "", "true" },
    {18, 0, "-315210476306765082", -1, -1, "", "true" },
    {18, 0, "-999999610900336578", -1, -1, "", "true" },
    {18, 0, "570209531076431270", -1, -1, "", "true" },
    {18, 0, "17218570820", -1, -1, "", "true" },
    {18, 0, "-877673631054136367", -1, -1, "", "true" },
    {18, 0, "-990823118796815853", -1, -1, "", "true" },
    {18, 0, "-109753853845815168", -1, -1, "", "true" },
    {18, 0, "-982343478834289187", -1, -1, "", "true" }
    };
    test_cast_all_fail<TYPE_DECIMAL64, TYPE_INT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal64p18s0ToIntNormal) {
    CastTestCaseArray test_cases = {
    {18, 0, "1924164", -1, -1, "1924164", "false" }
    };
    test_cast_all<TYPE_DECIMAL64, TYPE_INT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal64p18s0ToBigIntNormal) {
    CastTestCaseArray test_cases = {
    {18, 0, "-53097239902346494", -1, -1, "-53097239902346494", "false" },
    {18, 0, "-166777519475561368", -1, -1, "-166777519475561368", "false" },
    {18, 0, "766617669743413233", -1, -1, "766617669743413233", "false" },
    {18, 0, "23", -1, -1, "23", "false" },
    {18, 0, "-256137091823267305", -1, -1, "-256137091823267305", "false" },
    {18, 0, "117913239892045826", -1, -1, "117913239892045826", "false" },
    {18, 0, "447979297880330700", -1, -1, "447979297880330700", "false" },
    {18, 0, "357882844754176861", -1, -1, "357882844754176861", "false" },
    {18, 0, "42581094450204195", -1, -1, "42581094450204195", "false" },
    {18, 0, "-999999868104132807", -1, -1, "-999999868104132807", "false" },
    {18, 0, "48258378080453269", -1, -1, "48258378080453269", "false" },
    {18, 0, "-631489721225801962", -1, -1, "-631489721225801962", "false" },
    {18, 0, "-999999999999991496", -1, -1, "-999999999999991496", "false" },
    {18, 0, "861068217052645130", -1, -1, "861068217052645130", "false" },
    {18, 0, "-632434658684306169", -1, -1, "-632434658684306169", "false" },
    {18, 0, "26", -1, -1, "26", "false" },
    {18, 0, "207493550001555", -1, -1, "207493550001555", "false" },
    {18, 0, "-766361314653915870", -1, -1, "-766361314653915870", "false" },
    {18, 0, "591653346268714659", -1, -1, "591653346268714659", "false" },
    {18, 0, "-424060967858621460", -1, -1, "-424060967858621460", "false" }
    };
    test_cast_all<TYPE_DECIMAL64, TYPE_BIGINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal64p18s0ToLargeIntNormal) {
    CastTestCaseArray test_cases = {
    {18, 0, "-893163793819733878", -1, -1, "-893163793819733878", "false" },
    {18, 0, "-257749028213815725", -1, -1, "-257749028213815725", "false" },
    {18, 0, "-776995459290203078", -1, -1, "-776995459290203078", "false" },
    {18, 0, "55", -1, -1, "55", "false" },
    {18, 0, "-942576927108651666", -1, -1, "-942576927108651666", "false" },
    {18, 0, "120039741576629293", -1, -1, "120039741576629293", "false" },
    {18, 0, "130492714216603987", -1, -1, "130492714216603987", "false" },
    {18, 0, "-999999971355725042", -1, -1, "-999999971355725042", "false" },
    {18, 0, "8158055483238838", -1, -1, "8158055483238838", "false" },
    {18, 0, "522885093641679838", -1, -1, "522885093641679838", "false" },
    {18, 0, "608126450418190142", -1, -1, "608126450418190142", "false" },
    {18, 0, "712437226773593306", -1, -1, "712437226773593306", "false" },
    {18, 0, "560605504597905732", -1, -1, "560605504597905732", "false" },
    {18, 0, "-169889971512033548", -1, -1, "-169889971512033548", "false" },
    {18, 0, "950059291808033774", -1, -1, "950059291808033774", "false" },
    {18, 0, "-999999999999999998", -1, -1, "-999999999999999998", "false" },
    {18, 0, "-999710436339434850", -1, -1, "-999710436339434850", "false" },
    {18, 0, "-999999999886633581", -1, -1, "-999999999886633581", "false" },
    {18, 0, "2346984920271", -1, -1, "2346984920271", "false" },
    {18, 0, "165697470208983590", -1, -1, "165697470208983590", "false" }
    };
    test_cast_all<TYPE_DECIMAL64, TYPE_LARGEINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal64p18s2ToBooleanNormal) {
    CastTestCaseArray test_cases = {
    {18, 2, "-3516303764671658.95", -1, -1, "true", "false" },
    {18, 2, "-738757390176170.61", -1, -1, "true", "false" },
    {18, 2, "-6755660640809562.68", -1, -1, "true", "false" },
    {18, 2, "-5601187546800466.34", -1, -1, "true", "false" },
    {18, 2, "348068348755.99", -1, -1, "true", "false" },
    {18, 2, "-9999999999999999.52", -1, -1, "true", "false" },
    {18, 2, "2733618.57", -1, -1, "true", "false" },
    {18, 2, "397277585817544.25", -1, -1, "true", "false" },
    {18, 2, "-9983335990858563.31", -1, -1, "true", "false" },
    {18, 2, "1855654450174387.81", -1, -1, "true", "false" },
    {18, 2, "-5825724781381072.56", -1, -1, "true", "false" },
    {18, 2, "8127570330195043.00", -1, -1, "true", "false" },
    {18, 2, "1524471505187.89", -1, -1, "true", "false" },
    {18, 2, "-9999999999999995.93", -1, -1, "true", "false" },
    {18, 2, "-9999999999999997.47", -1, -1, "true", "false" },
    {18, 2, "-5517734741748207.04", -1, -1, "true", "false" },
    {18, 2, "-2886330925276510.47", -1, -1, "true", "false" },
    {18, 2, "7947404333076570.29", -1, -1, "true", "false" },
    {18, 2, "1289770635759746.88", -1, -1, "true", "false" },
    {18, 2, "-673213963818304.30", -1, -1, "true", "false" }
    };
    test_cast_all<TYPE_DECIMAL64, TYPE_BOOLEAN>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal64p18s2ToTinyIntAbnormal) {
    CastTestCaseArray test_cases = {
    {18, 2, "-6423139309778770.92", -1, -1, "", "true" },
    {18, 2, "937567.68", -1, -1, "", "true" },
    {18, 2, "814679373472069.74", -1, -1, "", "true" },
    {18, 2, "-9999916224847849.51", -1, -1, "", "true" },
    {18, 2, "11895.32", -1, -1, "", "true" },
    {18, 2, "-5489358654965620.64", -1, -1, "", "true" },
    {18, 2, "-2692892744720606.05", -1, -1, "", "true" },
    {18, 2, "2723.33", -1, -1, "", "true" },
    {18, 2, "-5184237354287538.32", -1, -1, "", "true" },
    {18, 2, "-8261490925156199.75", -1, -1, "", "true" },
    {18, 2, "-850888544896989.81", -1, -1, "", "true" },
    {18, 2, "77990.03", -1, -1, "", "true" },
    {18, 2, "-1715128236466623.70", -1, -1, "", "true" },
    {18, 2, "3173705624935623.69", -1, -1, "", "true" },
    {18, 2, "-1441979911109522.89", -1, -1, "", "true" },
    {18, 2, "-4122545466986446.09", -1, -1, "", "true" },
    {18, 2, "-10127270771514.64", -1, -1, "", "true" },
    {18, 2, "5970187986800646.95", -1, -1, "", "true" },
    {18, 2, "-9999999999673896.80", -1, -1, "", "true" },
    {18, 2, "-9010366251565069.50", -1, -1, "", "true" }
    };
    test_cast_all_fail<TYPE_DECIMAL64, TYPE_TINYINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal64p18s2ToSmallIntAbnormal) {
    CastTestCaseArray test_cases = {
    {18, 2, "-9088676629281066.36", -1, -1, "", "true" },
    {18, 2, "-5044267138183417.26", -1, -1, "", "true" },
    {18, 2, "7760403530841745.90", -1, -1, "", "true" },
    {18, 2, "2675650153078622.91", -1, -1, "", "true" },
    {18, 2, "44196748.17", -1, -1, "", "true" },
    {18, 2, "8470276664742826.15", -1, -1, "", "true" },
    {18, 2, "768006.85", -1, -1, "", "true" },
    {18, 2, "78120761.87", -1, -1, "", "true" },
    {18, 2, "3730677.80", -1, -1, "", "true" },
    {18, 2, "-3174664459898523.40", -1, -1, "", "true" },
    {18, 2, "-5191939598209377.36", -1, -1, "", "true" },
    {18, 2, "-7251149742856096.26", -1, -1, "", "true" },
    {18, 2, "-1187162122844165.51", -1, -1, "", "true" },
    {18, 2, "6096536977828496.97", -1, -1, "", "true" },
    {18, 2, "-9999876190588177.31", -1, -1, "", "true" },
    {18, 2, "2186735659418336.67", -1, -1, "", "true" },
    {18, 2, "-6160534431374286.31", -1, -1, "", "true" },
    {18, 2, "-9999998747595920.02", -1, -1, "", "true" }
    };
    test_cast_all_fail<TYPE_DECIMAL64, TYPE_SMALLINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal64p18s2ToSmallIntNormal) {
    CastTestCaseArray test_cases = {
    {18, 2, "2455.08", -1, -1, "2455", "false" },
    {18, 2, "2454.42", -1, -1, "2454", "false" }
    };
    test_cast_all<TYPE_DECIMAL64, TYPE_SMALLINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal64p18s2ToIntAbnormal) {
    CastTestCaseArray test_cases = {
    {18, 2, "-2584541954542652.73", -1, -1, "", "true" },
    {18, 2, "-4242116144986007.61", -1, -1, "", "true" },
    {18, 2, "-9999999966145189.05", -1, -1, "", "true" },
    {18, 2, "-9999999999995762.60", -1, -1, "", "true" },
    {18, 2, "-4659823287248490.45", -1, -1, "", "true" },
    {18, 2, "8904143093640277.62", -1, -1, "", "true" },
    {18, 2, "3091085696066192.32", -1, -1, "", "true" },
    {18, 2, "-5185274768022819.41", -1, -1, "", "true" },
    {18, 2, "1877901663147158.19", -1, -1, "", "true" },
    {18, 2, "7370470701526336.83", -1, -1, "", "true" },
    {18, 2, "7366605402361182.31", -1, -1, "", "true" },
    {18, 2, "-9894643940549868.92", -1, -1, "", "true" },
    {18, 2, "1527024078834432.38", -1, -1, "", "true" },
    {18, 2, "-2628668453931460.18", -1, -1, "", "true" },
    {18, 2, "-4211008212460367.32", -1, -1, "", "true" },
    {18, 2, "-9997614163886960.47", -1, -1, "", "true" },
    {18, 2, "-6919165996903984.71", -1, -1, "", "true" },
    {18, 2, "-9999999999999879.90", -1, -1, "", "true" }
    };
    test_cast_all_fail<TYPE_DECIMAL64, TYPE_INT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal64p18s2ToIntNormal) {
    CastTestCaseArray test_cases = {
    {18, 2, "35.39", -1, -1, "35", "false" },
    {18, 2, "1.09", -1, -1, "1", "false" }
    };
    test_cast_all<TYPE_DECIMAL64, TYPE_INT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal64p18s2ToBigIntNormal) {
    CastTestCaseArray test_cases = {
    {18, 2, "-8881374967791358.84", -1, -1, "-8881374967791358", "false" },
    {18, 2, "75180180.82", -1, -1, "75180180", "false" },
    {18, 2, "4854803942443021.73", -1, -1, "4854803942443021", "false" },
    {18, 2, "1430000121.07", -1, -1, "1430000121", "false" },
    {18, 2, "-3098619866277018.99", -1, -1, "-3098619866277018", "false" },
    {18, 2, "7048402450417441.20", -1, -1, "7048402450417441", "false" },
    {18, 2, "121410132859.82", -1, -1, "121410132859", "false" },
    {18, 2, "-9999999999915962.93", -1, -1, "-9999999999915962", "false" },
    {18, 2, "-2111193484118992.03", -1, -1, "-2111193484118992", "false" },
    {18, 2, "-7909912461849898.55", -1, -1, "-7909912461849898", "false" },
    {18, 2, "7921857456542465.46", -1, -1, "7921857456542465", "false" },
    {18, 2, "7233641889161354.69", -1, -1, "7233641889161354", "false" },
    {18, 2, "0.45", -1, -1, "0", "false" },
    {18, 2, "-9923322331923429.37", -1, -1, "-9923322331923429", "false" },
    {18, 2, "-9999999945131555.34", -1, -1, "-9999999945131555", "false" },
    {18, 2, "5592912122609751.72", -1, -1, "5592912122609751", "false" },
    {18, 2, "2193061.24", -1, -1, "2193061", "false" },
    {18, 2, "-7888550430657491.10", -1, -1, "-7888550430657491", "false" },
    {18, 2, "1214.84", -1, -1, "1214", "false" },
    {18, 2, "-9999999882238055.95", -1, -1, "-9999999882238055", "false" }
    };
    test_cast_all<TYPE_DECIMAL64, TYPE_BIGINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal64p18s2ToLargeIntNormal) {
    CastTestCaseArray test_cases = {
    {18, 2, "9301064353124669.04", -1, -1, "9301064353124669", "false" },
    {18, 2, "-2559301710801450.91", -1, -1, "-2559301710801450", "false" },
    {18, 2, "9456.74", -1, -1, "9456", "false" },
    {18, 2, "-1666683557355009.57", -1, -1, "-1666683557355009", "false" },
    {18, 2, "62718279755.80", -1, -1, "62718279755", "false" },
    {18, 2, "883842465371126.08", -1, -1, "883842465371126", "false" },
    {18, 2, "8269055341451667.95", -1, -1, "8269055341451667", "false" },
    {18, 2, "-9999999999997175.38", -1, -1, "-9999999999997175", "false" },
    {18, 2, "8284871763533376.28", -1, -1, "8284871763533376", "false" },
    {18, 2, "24280111717754.20", -1, -1, "24280111717754", "false" },
    {18, 2, "67991880579407.57", -1, -1, "67991880579407", "false" },
    {18, 2, "636577.39", -1, -1, "636577", "false" },
    {18, 2, "-1715128236466623.70", -1, -1, "-1715128236466623", "false" },
    {18, 2, "-8426033905123514.83", -1, -1, "-8426033905123514", "false" },
    {18, 2, "-5756581833374659.25", -1, -1, "-5756581833374659", "false" },
    {18, 2, "-9999999979860092.36", -1, -1, "-9999999979860092", "false" },
    {18, 2, "-9999943685382042.93", -1, -1, "-9999943685382042", "false" },
    {18, 2, "618426701692.16", -1, -1, "618426701692", "false" },
    {18, 2, "-1787755468157464.84", -1, -1, "-1787755468157464", "false" },
    {18, 2, "5772983473636189.32", -1, -1, "5772983473636189", "false" }
    };
    test_cast_all<TYPE_DECIMAL64, TYPE_LARGEINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal64p18s9ToBooleanNormal) {
    CastTestCaseArray test_cases = {
    {18, 9, "-999999999.999999995", -1, -1, "true", "false" },
    {18, 9, "0.000002227", -1, -1, "true", "false" },
    {18, 9, "56271955.929929292", -1, -1, "true", "false" },
    {18, 9, "783728671.807350782", -1, -1, "true", "false" },
    {18, 9, "261657537.921911283", -1, -1, "true", "false" },
    {18, 9, "-564804312.726476575", -1, -1, "true", "false" },
    {18, 9, "1.642364631", -1, -1, "true", "false" },
    {18, 9, "-970223927.681578809", -1, -1, "true", "false" },
    {18, 9, "-241744546.139046125", -1, -1, "true", "false" },
    {18, 9, "-984531012.137547386", -1, -1, "true", "false" },
    {18, 9, "-609059011.497163927", -1, -1, "true", "false" },
    {18, 9, "0.051989995", -1, -1, "true", "false" },
    {18, 9, "228467935.264768460", -1, -1, "true", "false" },
    {18, 9, "420229750.290917920", -1, -1, "true", "false" },
    {18, 9, "721166342.018436695", -1, -1, "true", "false" },
    {18, 9, "3E-9", -1, -1, "true", "false" },
    {18, 9, "-999999997.689754296", -1, -1, "true", "false" },
    {18, 9, "-116424752.633864921", -1, -1, "true", "false" },
    {18, 9, "69180435.488089041", -1, -1, "true", "false" }
    };
    test_cast_all<TYPE_DECIMAL64, TYPE_BOOLEAN>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal64p18s9ToTinyIntAbnormal) {
    CastTestCaseArray test_cases = {
    {18, 9, "-297345774.647918239", -1, -1, "", "true" },
    {18, 9, "-778606735.579998306", -1, -1, "", "true" },
    {18, 9, "666732716.526857071", -1, -1, "", "true" },
    {18, 9, "676727112.421276384", -1, -1, "", "true" },
    {18, 9, "-966530389.352052517", -1, -1, "", "true" },
    {18, 9, "87388802.484309389", -1, -1, "", "true" },
    {18, 9, "-694772190.074461180", -1, -1, "", "true" },
    {18, 9, "-999999772.587288637", -1, -1, "", "true" },
    {18, 9, "447552259.691125229", -1, -1, "", "true" },
    {18, 9, "-999999999.990415238", -1, -1, "", "true" },
    {18, 9, "341884697.019871671", -1, -1, "", "true" },
    {18, 9, "851580463.860158420", -1, -1, "", "true" },
    {18, 9, "-169375327.583618121", -1, -1, "", "true" },
    {18, 9, "-920742835.368986619", -1, -1, "", "true" },
    {18, 9, "-733977245.473849833", -1, -1, "", "true" }
    };
    test_cast_all_fail<TYPE_DECIMAL64, TYPE_TINYINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal64p18s9ToTinyIntNormal) {
    CastTestCaseArray test_cases = {
    {18, 9, "0.000517208", -1, -1, "0", "false" },
    {18, 9, "15.644873794", -1, -1, "15", "false" },
    {18, 9, "1E-9", -1, -1, "0", "false" },
    {18, 9, "9.379208298", -1, -1, "9", "false" },
    {18, 9, "0E-9", -1, -1, "0", "false" }
    };
    test_cast_all<TYPE_DECIMAL64, TYPE_TINYINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal64p18s9ToSmallIntAbnormal) {
    CastTestCaseArray test_cases = {
    {18, 9, "520961122.845045720", -1, -1, "", "true" },
    {18, 9, "-358904626.285425555", -1, -1, "", "true" },
    {18, 9, "-999982692.176551743", -1, -1, "", "true" },
    {18, 9, "-999228914.377508898", -1, -1, "", "true" },
    {18, 9, "-970185014.715217318", -1, -1, "", "true" },
    {18, 9, "983934002.927329561", -1, -1, "", "true" },
    {18, 9, "476243132.091427848", -1, -1, "", "true" },
    {18, 9, "-999999999.999875721", -1, -1, "", "true" },
    {18, 9, "-999999999.999999774", -1, -1, "", "true" },
    {18, 9, "592446393.686482605", -1, -1, "", "true" },
    {18, 9, "-562829474.273795913", -1, -1, "", "true" },
    {18, 9, "-171512823.646662370", -1, -1, "", "true" },
    {18, 9, "-999931086.730036695", -1, -1, "", "true" },
    {18, 9, "385261107.222602193", -1, -1, "", "true" },
    {18, 9, "350365677.916912308", -1, -1, "", "true" },
    {18, 9, "707910779.758392600", -1, -1, "", "true" },
    {18, 9, "507341561.153660965", -1, -1, "", "true" }
    };
    test_cast_all_fail<TYPE_DECIMAL64, TYPE_SMALLINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal64p18s9ToSmallIntNormal) {
    CastTestCaseArray test_cases = {
    {18, 9, "0.000001663", -1, -1, "0", "false" },
    {18, 9, "0.005794181", -1, -1, "0", "false" },
    {18, 9, "13.024952385", -1, -1, "13", "false" }
    };
    test_cast_all<TYPE_DECIMAL64, TYPE_SMALLINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal64p18s9ToIntNormal) {
    CastTestCaseArray test_cases = {
    {18, 9, "202071339.049673641", -1, -1, "202071339", "false" },
    {18, 9, "-80254641.667233211", -1, -1, "-80254641", "false" },
    {18, 9, "800332118.024473251", -1, -1, "800332118", "false" },
    {18, 9, "0.000019593", -1, -1, "0", "false" },
    {18, 9, "-999999999.999966025", -1, -1, "-999999999", "false" },
    {18, 9, "-753693374.737044457", -1, -1, "-753693374", "false" },
    {18, 9, "292379634.835934234", -1, -1, "292379634", "false" },
    {18, 9, "451473142.727414440", -1, -1, "451473142", "false" },
    {18, 9, "-999999999.999999997", -1, -1, "-999999999", "false" },
    {18, 9, "0.006913527", -1, -1, "0", "false" },
    {18, 9, "-999999999.999999991", -1, -1, "-999999999", "false" },
    {18, 9, "624493151.532183142", -1, -1, "624493151", "false" },
    {18, 9, "1581042.497258432", -1, -1, "1581042", "false" },
    {18, 9, "5.701673068", -1, -1, "5", "false" },
    {18, 9, "0.211299626", -1, -1, "0", "false" },
    {18, 9, "664219820.065721260", -1, -1, "664219820", "false" },
    {18, 9, "-999999999.896389545", -1, -1, "-999999999", "false" },
    {18, 9, "484802642.152692878", -1, -1, "484802642", "false" },
    {18, 9, "775342298.847284313", -1, -1, "775342298", "false" },
    {18, 9, "-440638444.434172116", -1, -1, "-440638444", "false" }
    };
    test_cast_all<TYPE_DECIMAL64, TYPE_INT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal64p18s9ToBigIntNormal) {
    CastTestCaseArray test_cases = {
    {18, 9, "-999999998.191997390", -1, -1, "-999999998", "false" },
    {18, 9, "6.246672473", -1, -1, "6", "false" },
    {18, 9, "426326113.160656470", -1, -1, "426326113", "false" },
    {18, 9, "319568604.712378807", -1, -1, "319568604", "false" },
    {18, 9, "-999999999.382791606", -1, -1, "-999999999", "false" },
    {18, 9, "-185679536.253286769", -1, -1, "-185679536", "false" },
    {18, 9, "0.000002064", -1, -1, "0", "false" },
    {18, 9, "486841280.906896500", -1, -1, "486841280", "false" },
    {18, 9, "-999999999.999986094", -1, -1, "-999999999", "false" },
    {18, 9, "-999999999.999944218", -1, -1, "-999999999", "false" },
    {18, 9, "-999999999.969549661", -1, -1, "-999999999", "false" },
    {18, 9, "-999999999.920679713", -1, -1, "-999999999", "false" },
    {18, 9, "-999944244.947347889", -1, -1, "-999944244", "false" },
    {18, 9, "-999946248.436917262", -1, -1, "-999946248", "false" },
    {18, 9, "-393695362.394953251", -1, -1, "-393695362", "false" },
    {18, 9, "2E-9", -1, -1, "0", "false" },
    {18, 9, "742591212.682975866", -1, -1, "742591212", "false" },
    {18, 9, "-369179608.232439417", -1, -1, "-369179608", "false" },
    {18, 9, "9050.423057871", -1, -1, "9050", "false" },
    {18, 9, "294439845.520562234", -1, -1, "294439845", "false" }
    };
    test_cast_all<TYPE_DECIMAL64, TYPE_BIGINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal64p18s9ToLargeIntNormal) {
    CastTestCaseArray test_cases = {
    {18, 9, "41399258.902543369", -1, -1, "41399258", "false" },
    {18, 9, "-999999999.524508349", -1, -1, "-999999999", "false" },
    {18, 9, "944147425.111760666", -1, -1, "944147425", "false" },
    {18, 9, "-999999999.999649717", -1, -1, "-999999999", "false" },
    {18, 9, "-178724319.532062759", -1, -1, "-178724319", "false" },
    {18, 9, "107065700.186223000", -1, -1, "107065700", "false" },
    {18, 9, "-898284767.111782389", -1, -1, "-898284767", "false" },
    {18, 9, "0.027200807", -1, -1, "0", "false" },
    {18, 9, "0.135187042", -1, -1, "0", "false" },
    {18, 9, "-602124795.018899704", -1, -1, "-602124795", "false" },
    {18, 9, "-490642430.867420056", -1, -1, "-490642430", "false" },
    {18, 9, "-921565739.470298189", -1, -1, "-921565739", "false" },
    {18, 9, "-703730731.579301005", -1, -1, "-703730731", "false" },
    {18, 9, "-870700827.724668178", -1, -1, "-870700827", "false" },
    {18, 9, "-999996252.347778793", -1, -1, "-999996252", "false" },
    {18, 9, "-999999999.999765245", -1, -1, "-999999999", "false" },
    {18, 9, "-999999999.999280002", -1, -1, "-999999999", "false" },
    {18, 9, "-999999999.999996481", -1, -1, "-999999999", "false" },
    {18, 9, "834768995.428516939", -1, -1, "834768995", "false" },
    {18, 9, "33000149.084876372", -1, -1, "33000149", "false" }
    };
    test_cast_all<TYPE_DECIMAL64, TYPE_LARGEINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal64p18s18ToBooleanNormal) {
    CastTestCaseArray test_cases = {
    {18, 18, "0.617079178485202252", -1, -1, "true", "false" },
    {18, 18, "-0.220836855328065832", -1, -1, "true", "false" },
    {18, 18, "0.058986311244883660", -1, -1, "true", "false" },
    {18, 18, "0.309222758304690302", -1, -1, "true", "false" },
    {18, 18, "-0.544425463157382515", -1, -1, "true", "false" },
    {18, 18, "0.684225324053570537", -1, -1, "true", "false" },
    {18, 18, "5E-18", -1, -1, "true", "false" },
    {18, 18, "-0.908598314285460281", -1, -1, "true", "false" },
    {18, 18, "2.9291149927E-8", -1, -1, "true", "false" },
    {18, 18, "-0.999999999996569891", -1, -1, "true", "false" },
    {18, 18, "4.75461E-13", -1, -1, "true", "false" },
    {18, 18, "2.6E-17", -1, -1, "true", "false" },
    {18, 18, "-0.895063604581107800", -1, -1, "true", "false" },
    {18, 18, "0.198979035360340889", -1, -1, "true", "false" },
    {18, 18, "-0.999916020034746119", -1, -1, "true", "false" },
    {18, 18, "0.272787423276193825", -1, -1, "true", "false" },
    {18, 18, "0.139385897153117188", -1, -1, "true", "false" },
    {18, 18, "0.429126463742926113", -1, -1, "true", "false" },
    {18, 18, "-0.480494061170228455", -1, -1, "true", "false" },
    {18, 18, "-0.999999999999999998", -1, -1, "true", "false" }
    };
    test_cast_all<TYPE_DECIMAL64, TYPE_BOOLEAN>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal64p18s18ToTinyIntNormal) {
    CastTestCaseArray test_cases = {
    {18, 18, "-0.999260279929234200", -1, -1, "0", "false" },
    {18, 18, "0.710014430171681390", -1, -1, "0", "false" },
    {18, 18, "1.873E-15", -1, -1, "0", "false" },
    {18, 18, "-0.306189187958514751", -1, -1, "0", "false" },
    {18, 18, "2.0421821160E-8", -1, -1, "0", "false" },
    {18, 18, "-0.999291152137715819", -1, -1, "0", "false" },
    {18, 18, "6.2645388E-11", -1, -1, "0", "false" },
    {18, 18, "-0.986415264970385819", -1, -1, "0", "false" },
    {18, 18, "-0.999999999999999987", -1, -1, "0", "false" },
    {18, 18, "0.771561559274883396", -1, -1, "0", "false" },
    {18, 18, "1.56064674120E-7", -1, -1, "0", "false" },
    {18, 18, "-0.999999999974215920", -1, -1, "0", "false" },
    {18, 18, "5.17804E-13", -1, -1, "0", "false" },
    {18, 18, "-0.999999999999999996", -1, -1, "0", "false" },
    {18, 18, "-0.034281555462335037", -1, -1, "0", "false" },
    {18, 18, "0.828487176353337628", -1, -1, "0", "false" },
    {18, 18, "0.000004262037706416", -1, -1, "0", "false" },
    {18, 18, "0.816804346316087138", -1, -1, "0", "false" },
    {18, 18, "9.617034484E-9", -1, -1, "0", "false" },
    {18, 18, "-0.425661875831192135", -1, -1, "0", "false" }
    };
    test_cast_all<TYPE_DECIMAL64, TYPE_TINYINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal64p18s18ToSmallIntNormal) {
    CastTestCaseArray test_cases = {
    {18, 18, "-0.998311062528103204", -1, -1, "0", "false" },
    {18, 18, "1.23338109893E-7", -1, -1, "0", "false" },
    {18, 18, "0.897224963944421710", -1, -1, "0", "false" },
    {18, 18, "0.758885801325367277", -1, -1, "0", "false" },
    {18, 18, "-0.999999999868872906", -1, -1, "0", "false" },
    {18, 18, "-0.300403259772022208", -1, -1, "0", "false" },
    {18, 18, "2.401E-15", -1, -1, "0", "false" },
    {18, 18, "0.798799588447289396", -1, -1, "0", "false" },
    {18, 18, "0.791458023794884664", -1, -1, "0", "false" },
    {18, 18, "0.929416711208299669", -1, -1, "0", "false" },
    {18, 18, "-0.999999999996994197", -1, -1, "0", "false" },
    {18, 18, "-0.934843683574630505", -1, -1, "0", "false" },
    {18, 18, "-0.505757344438332457", -1, -1, "0", "false" },
    {18, 18, "-0.646395833537231652", -1, -1, "0", "false" },
    {18, 18, "0.000001677677833583", -1, -1, "0", "false" },
    {18, 18, "-0.999999999999999829", -1, -1, "0", "false" },
    {18, 18, "-0.024425421820562460", -1, -1, "0", "false" },
    {18, 18, "-0.714349584460865941", -1, -1, "0", "false" },
    {18, 18, "-0.551433771152364995", -1, -1, "0", "false" },
    {18, 18, "-0.999475422175509198", -1, -1, "0", "false" }
    };
    test_cast_all<TYPE_DECIMAL64, TYPE_SMALLINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal64p18s18ToIntNormal) {
    CastTestCaseArray test_cases = {
    {18, 18, "-0.624856085867120102", -1, -1, "0", "false" },
    {18, 18, "-0.999913964829159095", -1, -1, "0", "false" },
    {18, 18, "0.828487176353337628", -1, -1, "0", "false" },
    {18, 18, "0.602539373347857211", -1, -1, "0", "false" },
    {18, 18, "0.586935630510621316", -1, -1, "0", "false" },
    {18, 18, "-0.251723644042649245", -1, -1, "0", "false" },
    {18, 18, "-0.708731065905484455", -1, -1, "0", "false" },
    {18, 18, "-0.876461728968095141", -1, -1, "0", "false" },
    {18, 18, "-0.581525770012916933", -1, -1, "0", "false" },
    {18, 18, "-0.421586341519177183", -1, -1, "0", "false" },
    {18, 18, "0.698051704723880268", -1, -1, "0", "false" },
    {18, 18, "2.67E-16", -1, -1, "0", "false" },
    {18, 18, "-0.583502446598282070", -1, -1, "0", "false" },
    {18, 18, "-0.999944787730667820", -1, -1, "0", "false" },
    {18, 18, "0.389680374766523927", -1, -1, "0", "false" },
    {18, 18, "-0.999999999999999409", -1, -1, "0", "false" },
    {18, 18, "4.11E-16", -1, -1, "0", "false" },
    {18, 18, "0.660197861557756878", -1, -1, "0", "false" },
    {18, 18, "-0.126003865604021225", -1, -1, "0", "false" },
    {18, 18, "-0.984585776400857940", -1, -1, "0", "false" }
    };
    test_cast_all<TYPE_DECIMAL64, TYPE_INT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal64p18s18ToBigIntNormal) {
    CastTestCaseArray test_cases = {
    {18, 18, "0.442160295250977111", -1, -1, "0", "false" },
    {18, 18, "-0.141718650894921347", -1, -1, "0", "false" },
    {18, 18, "-0.648710554457976793", -1, -1, "0", "false" },
    {18, 18, "0.102298523201288639", -1, -1, "0", "false" },
    {18, 18, "1.2E-17", -1, -1, "0", "false" },
    {18, 18, "1.05857669949E-7", -1, -1, "0", "false" },
    {18, 18, "8.2626166730E-8", -1, -1, "0", "false" },
    {18, 18, "-0.999974184673795512", -1, -1, "0", "false" },
    {18, 18, "4.0017527298E-8", -1, -1, "0", "false" },
    {18, 18, "-0.304877571571785777", -1, -1, "0", "false" },
    {18, 18, "-0.360238554908759962", -1, -1, "0", "false" },
    {18, 18, "0.915309125216829234", -1, -1, "0", "false" },
    {18, 18, "0.812733715565780674", -1, -1, "0", "false" },
    {18, 18, "0.082849816184937078", -1, -1, "0", "false" },
    {18, 18, "-0.984334465327939155", -1, -1, "0", "false" },
    {18, 18, "7.29685E-13", -1, -1, "0", "false" },
    {18, 18, "0.918042341256853351", -1, -1, "0", "false" },
    {18, 18, "-0.814620480821615688", -1, -1, "0", "false" },
    {18, 18, "-0.999999999997842165", -1, -1, "0", "false" },
    {18, 18, "2.51963874E-10", -1, -1, "0", "false" }
    };
    test_cast_all<TYPE_DECIMAL64, TYPE_BIGINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal64p18s18ToLargeIntNormal) {
    CastTestCaseArray test_cases = {
    {18, 18, "-0.999999999660282886", -1, -1, "0", "false" },
    {18, 18, "-0.728273938542645262", -1, -1, "0", "false" },
    {18, 18, "-0.779812752373120967", -1, -1, "0", "false" },
    {18, 18, "-0.999999999999999984", -1, -1, "0", "false" },
    {18, 18, "-0.999999999924429172", -1, -1, "0", "false" },
    {18, 18, "0.956529258999259890", -1, -1, "0", "false" },
    {18, 18, "-0.456222395867814003", -1, -1, "0", "false" },
    {18, 18, "-0.978529132324824413", -1, -1, "0", "false" },
    {18, 18, "-0.819898306460819590", -1, -1, "0", "false" },
    {18, 18, "0.717484115218506274", -1, -1, "0", "false" },
    {18, 18, "2.5584E-14", -1, -1, "0", "false" },
    {18, 18, "0.439846481037758814", -1, -1, "0", "false" },
    {18, 18, "0.343040561126369424", -1, -1, "0", "false" },
    {18, 18, "-0.979982771382813279", -1, -1, "0", "false" },
    {18, 18, "7.06186E-13", -1, -1, "0", "false" },
    {18, 18, "-0.164226204867532402", -1, -1, "0", "false" },
    {18, 18, "2.250E-15", -1, -1, "0", "false" },
    {18, 18, "1.667674E-12", -1, -1, "0", "false" },
    {18, 18, "-0.999999999999874782", -1, -1, "0", "false" },
    {18, 18, "-0.999999999999909772", -1, -1, "0", "false" }
    };
    test_cast_all<TYPE_DECIMAL64, TYPE_LARGEINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal64p15s13ToBooleanNormal) {
    CastTestCaseArray test_cases = {
    {15, 13, "61.5260802472523", -1, -1, "true", "false" },
    {15, 13, "33.0503315346044", -1, -1, "true", "false" },
    {15, 13, "-99.9999889752650", -1, -1, "true", "false" },
    {15, 13, "-99.9999497256347", -1, -1, "true", "false" },
    {15, 13, "-66.9718389563401", -1, -1, "true", "false" },
    {15, 13, "4.42E-11", -1, -1, "true", "false" },
    {15, 13, "-6.2386839564974", -1, -1, "true", "false" },
    {15, 13, "-9.2584597171927", -1, -1, "true", "false" },
    {15, 13, "0.0000014936331", -1, -1, "true", "false" },
    {15, 13, "-39.8187276894784", -1, -1, "true", "false" },
    {15, 13, "-99.9999999999975", -1, -1, "true", "false" },
    {15, 13, "31.0528774263433", -1, -1, "true", "false" },
    {15, 13, "-99.3146928098460", -1, -1, "true", "false" },
    {15, 13, "8.4261287801554", -1, -1, "true", "false" },
    {15, 13, "-24.6338841010606", -1, -1, "true", "false" },
    {15, 13, "-20.8245704031565", -1, -1, "true", "false" },
    {15, 13, "91.9491687528696", -1, -1, "true", "false" },
    {15, 13, "-84.5483206230623", -1, -1, "true", "false" },
    {15, 13, "36.7835899366713", -1, -1, "true", "false" },
    {15, 13, "67.8532750365797", -1, -1, "true", "false" }
    };
    test_cast_all<TYPE_DECIMAL64, TYPE_BOOLEAN>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal64p15s13ToTinyIntNormal) {
    CastTestCaseArray test_cases = {
    {15, 13, "-70.6254700345194", -1, -1, "-70", "false" },
    {15, 13, "-99.9999999972094", -1, -1, "-99", "false" },
    {15, 13, "-99.9999983696129", -1, -1, "-99", "false" },
    {15, 13, "-82.4134184351198", -1, -1, "-82", "false" },
    {15, 13, "9.3876408585318", -1, -1, "9", "false" },
    {15, 13, "-30.2738408354041", -1, -1, "-30", "false" },
    {15, 13, "-99.3742087333492", -1, -1, "-99", "false" },
    {15, 13, "-6.4927024156177", -1, -1, "-6", "false" },
    {15, 13, "6.6709552158253", -1, -1, "6", "false" },
    {15, 13, "1.4157147607029", -1, -1, "1", "false" },
    {15, 13, "-75.9803108854498", -1, -1, "-75", "false" },
    {15, 13, "23.9831150640215", -1, -1, "23", "false" },
    {15, 13, "68.3342470881005", -1, -1, "68", "false" },
    {15, 13, "-82.9967705541197", -1, -1, "-82", "false" },
    {15, 13, "-53.7561026331500", -1, -1, "-53", "false" },
    {15, 13, "2.0659E-9", -1, -1, "0", "false" },
    {15, 13, "-62.8833769381309", -1, -1, "-62", "false" },
    {15, 13, "2.7504250940616", -1, -1, "2", "false" },
    {15, 13, "-99.9990655253798", -1, -1, "-99", "false" },
    {15, 13, "96.2501727063072", -1, -1, "96", "false" }
    };
    test_cast_all<TYPE_DECIMAL64, TYPE_TINYINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal64p15s13ToSmallIntNormal) {
    CastTestCaseArray test_cases = {
    {15, 13, "-99.9996294941128", -1, -1, "-99", "false" },
    {15, 13, "1.7930436926145", -1, -1, "1", "false" },
    {15, 13, "27.9524225912648", -1, -1, "27", "false" },
    {15, 13, "-99.9999971650544", -1, -1, "-99", "false" },
    {15, 13, "-99.9999999999997", -1, -1, "-99", "false" },
    {15, 13, "65.8453358813240", -1, -1, "65", "false" },
    {15, 13, "-65.6604386056943", -1, -1, "-65", "false" },
    {15, 13, "4.002048E-7", -1, -1, "0", "false" },
    {15, 13, "2.6754939323590", -1, -1, "2", "false" },
    {15, 13, "-99.9999997703758", -1, -1, "-99", "false" },
    {15, 13, "0.0000496812396", -1, -1, "0", "false" },
    {15, 13, "79.8703734837319", -1, -1, "79", "false" },
    {15, 13, "-80.2499356193467", -1, -1, "-80", "false" },
    {15, 13, "22.2536462059457", -1, -1, "22", "false" },
    {15, 13, "88.9564734471324", -1, -1, "88", "false" },
    {15, 13, "-32.8953517103645", -1, -1, "-32", "false" },
    {15, 13, "-44.6000428273453", -1, -1, "-44", "false" },
    {15, 13, "64.9434366203421", -1, -1, "64", "false" },
    {15, 13, "58.9262933682572", -1, -1, "58", "false" },
    {15, 13, "-99.9039795829659", -1, -1, "-99", "false" }
    };
    test_cast_all<TYPE_DECIMAL64, TYPE_SMALLINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal64p15s13ToIntNormal) {
    CastTestCaseArray test_cases = {
    {15, 13, "-76.6676562214500", -1, -1, "-76", "false" },
    {15, 13, "-99.9999999898452", -1, -1, "-99", "false" },
    {15, 13, "-99.9999999999957", -1, -1, "-99", "false" },
    {15, 13, "-0.8845205340775", -1, -1, "0", "false" },
    {15, 13, "-99.9999999633825", -1, -1, "-99", "false" },
    {15, 13, "-37.2883988785006", -1, -1, "-37", "false" },
    {15, 13, "-41.6118059059593", -1, -1, "-41", "false" },
    {15, 13, "-99.9999999807753", -1, -1, "-99", "false" },
    {15, 13, "-30.4338196477519", -1, -1, "-30", "false" },
    {15, 13, "37.9291493797792", -1, -1, "37", "false" },
    {15, 13, "-66.1739178655766", -1, -1, "-66", "false" },
    {15, 13, "-11.3025029520407", -1, -1, "-11", "false" },
    {15, 13, "50.6558957057938", -1, -1, "50", "false" },
    {15, 13, "58.2975066252371", -1, -1, "58", "false" },
    {15, 13, "5.516E-10", -1, -1, "0", "false" },
    {15, 13, "-21.7027539205785", -1, -1, "-21", "false" },
    {15, 13, "0.8411187501404", -1, -1, "0", "false" },
    {15, 13, "41.1389664423546", -1, -1, "41", "false" },
    {15, 13, "-99.9999999400077", -1, -1, "-99", "false" },
    {15, 13, "9.3210311059892", -1, -1, "9", "false" }
    };
    test_cast_all<TYPE_DECIMAL64, TYPE_INT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal64p15s13ToBigIntNormal) {
    CastTestCaseArray test_cases = {
    {15, 13, "-99.9999990571464", -1, -1, "-99", "false" },
    {15, 13, "60.7928935098342", -1, -1, "60", "false" },
    {15, 13, "3.1538503869151", -1, -1, "3", "false" },
    {15, 13, "2E-13", -1, -1, "0", "false" },
    {15, 13, "12.5330278726217", -1, -1, "12", "false" },
    {15, 13, "-97.2496131588758", -1, -1, "-97", "false" },
    {15, 13, "-69.3001277223247", -1, -1, "-69", "false" },
    {15, 13, "-79.7691450196038", -1, -1, "-79", "false" },
    {15, 13, "32.3414965828531", -1, -1, "32", "false" },
    {15, 13, "1.6E-12", -1, -1, "0", "false" },
    {15, 13, "-99.9999962034998", -1, -1, "-99", "false" },
    {15, 13, "-98.2861179563745", -1, -1, "-98", "false" },
    {15, 13, "5.1349940474465", -1, -1, "5", "false" },
    {15, 13, "-23.6871815355108", -1, -1, "-23", "false" },
    {15, 13, "-45.0675649933961", -1, -1, "-45", "false" },
    {15, 13, "-99.9999999999981", -1, -1, "-99", "false" },
    {15, 13, "1.4205E-9", -1, -1, "0", "false" },
    {15, 13, "67.8742171727607", -1, -1, "67", "false" },
    {15, 13, "-99.9601423994753", -1, -1, "-99", "false" },
    {15, 13, "0.0174911142486", -1, -1, "0", "false" }
    };
    test_cast_all<TYPE_DECIMAL64, TYPE_BIGINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal64p15s13ToLargeIntNormal) {
    CastTestCaseArray test_cases = {
    {15, 13, "96.9708261594545", -1, -1, "96", "false" },
    {15, 13, "4.9313025661834", -1, -1, "4", "false" },
    {15, 13, "4.79E-11", -1, -1, "0", "false" },
    {15, 13, "-22.3429172437559", -1, -1, "-22", "false" },
    {15, 13, "-69.0104930868824", -1, -1, "-69", "false" },
    {15, 13, "-50.2025004939778", -1, -1, "-50", "false" },
    {15, 13, "-44.9508456541565", -1, -1, "-44", "false" },
    {15, 13, "25.0656346718350", -1, -1, "25", "false" },
    {15, 13, "-99.9999999997017", -1, -1, "-99", "false" },
    {15, 13, "-65.8107036161260", -1, -1, "-65", "false" },
    {15, 13, "81.1313784859449", -1, -1, "81", "false" },
    {15, 13, "75.9772888187053", -1, -1, "75", "false" },
    {15, 13, "79.5946733744341", -1, -1, "79", "false" },
    {15, 13, "0.1034539460498", -1, -1, "0", "false" },
    {15, 13, "-23.5814714021401", -1, -1, "-23", "false" },
    {15, 13, "-69.2969551297625", -1, -1, "-69", "false" },
    {15, 13, "79.9220756422000", -1, -1, "79", "false" },
    {15, 13, "-71.5588345309580", -1, -1, "-71", "false" },
    {15, 13, "37.6169815341898", -1, -1, "37", "false" },
    {15, 13, "-23.6713761199951", -1, -1, "-23", "false" }
    };
    test_cast_all<TYPE_DECIMAL64, TYPE_LARGEINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal128p38s0ToBooleanNormal) {
    CastTestCaseArray test_cases = {
    {38, 0, "4820287502054252819807570", -1, -1, "true", "false" },
    {38, 0, "-99999999999999999999999999405571410478", -1, -1, "true", "false" },
    {38, 0, "-99999999999999999999999999615430720867", -1, -1, "true", "false" },
    {38, 0, "-99999999999999999999999999987183621516", -1, -1, "true", "false" },
    {38, 0, "132411988799732011818550387", -1, -1, "true", "false" },
    {38, 0, "-99991877149657803870440332839639552385", -1, -1, "true", "false" },
    {38, 0, "-99999999999999999969021421886333084415", -1, -1, "true", "false" },
    {38, 0, "717992584680249337162645717", -1, -1, "true", "false" },
    {38, 0, "-99999999999999999999997976586660968821", -1, -1, "true", "false" },
    {38, 0, "-99999999999999999920427393992129905150", -1, -1, "true", "false" },
    {38, 0, "55556169", -1, -1, "true", "false" },
    {38, 0, "-81075540590908228267046755078880464091", -1, -1, "true", "false" },
    {38, 0, "-99999999999999999999999998682840072813", -1, -1, "true", "false" },
    {38, 0, "-99106057026376519898960489128752645948", -1, -1, "true", "false" },
    {38, 0, "-99999999999999999999999999999979870064", -1, -1, "true", "false" },
    {38, 0, "3218788585066463989843538", -1, -1, "true", "false" },
    {38, 0, "-99999999999976909876754783359083298594", -1, -1, "true", "false" },
    {38, 0, "-99999999999999999999999681704144517445", -1, -1, "true", "false" },
    {38, 0, "-99999999999999999999426221350357365749", -1, -1, "true", "false" },
    {38, 0, "-99999999627339996502126897092235229745", -1, -1, "true", "false" }
    };
    test_cast_all<TYPE_DECIMAL128, TYPE_BOOLEAN>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal128p38s0ToTinyIntAbnormal) {
    CastTestCaseArray test_cases = {
    {38, 0, "840651753914743083904802", -1, -1, "", "true" },
    {38, 0, "493384589550209011985172293957412535", -1, -1, "", "true" },
    {38, 0, "-99999999999999999999999999999999999835", -1, -1, "", "true" },
    {38, 0, "-99944269896817461460553516949647949053", -1, -1, "", "true" },
    {38, 0, "9474218350870555801801598", -1, -1, "", "true" },
    {38, 0, "126094701777520987802", -1, -1, "", "true" },
    {38, 0, "1633248869990139910115728050640540570", -1, -1, "", "true" },
    {38, 0, "-99991376064699876408360307111308407754", -1, -1, "", "true" },
    {38, 0, "4030227221910885904207910570", -1, -1, "", "true" },
    {38, 0, "-99999999998947198982488926215114180766", -1, -1, "", "true" },
    {38, 0, "4017913718", -1, -1, "", "true" },
    {38, 0, "-99999999999999999999999999992705272928", -1, -1, "", "true" },
    {38, 0, "-99999999999428499871471725019641843139", -1, -1, "", "true" },
    {38, 0, "-99999999995132036789947139098018562320", -1, -1, "", "true" },
    {38, 0, "-99999997649000476890608898911614190901", -1, -1, "", "true" },
    {38, 0, "-99999999999999755276573722806650702533", -1, -1, "", "true" },
    {38, 0, "9329441238758279239896209229", -1, -1, "", "true" },
    {38, 0, "2919614670613289598525704966872", -1, -1, "", "true" },
    {38, 0, "-99999999999999999999999896947152081749", -1, -1, "", "true" },
    {38, 0, "546716", -1, -1, "", "true" }
    };
    test_cast_all_fail<TYPE_DECIMAL128, TYPE_TINYINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal128p38s0ToSmallIntAbnormal) {
    CastTestCaseArray test_cases = {
    {38, 0, "423617522101170279955475405749", -1, -1, "", "true" },
    {38, 0, "726116374303001912", -1, -1, "", "true" },
    {38, 0, "-99999999999993756058206155545162733720", -1, -1, "", "true" },
    {38, 0, "-99999999999999999983549991084181020823", -1, -1, "", "true" },
    {38, 0, "-99999999999999999999999999999999999994", -1, -1, "", "true" },
    {38, 0, "-99983165276635402957697346951215457099", -1, -1, "", "true" },
    {38, 0, "-99999999999999999597794308987652498116", -1, -1, "", "true" },
    {38, 0, "318444138374472203319871769443762496", -1, -1, "", "true" },
    {38, 0, "59040679678738656013792266261254", -1, -1, "", "true" },
    {38, 0, "1380324", -1, -1, "", "true" },
    {38, 0, "-58726684708866490011355849203079806469", -1, -1, "", "true" },
    {38, 0, "-99999999999999999984510603469601250553", -1, -1, "", "true" },
    {38, 0, "-99997845459585493762370903996483953686", -1, -1, "", "true" },
    {38, 0, "412823", -1, -1, "", "true" },
    {38, 0, "-99999999999999999999967752670365737276", -1, -1, "", "true" },
    {38, 0, "8640430247950635261139", -1, -1, "", "true" },
    {38, 0, "-99999999999999948599560992234189054015", -1, -1, "", "true" },
    {38, 0, "-99993990883308118678900603798113126574", -1, -1, "", "true" },
    {38, 0, "-99999998948592133978429393400897104227", -1, -1, "", "true" }
    };
    test_cast_all_fail<TYPE_DECIMAL128, TYPE_SMALLINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal128p38s0ToSmallIntNormal) {
    CastTestCaseArray test_cases = {
    {38, 0, "482", -1, -1, "482", "false" }
    };
    test_cast_all<TYPE_DECIMAL128, TYPE_SMALLINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal128p38s0ToIntAbnormal) {
    CastTestCaseArray test_cases = {
    {38, 0, "47508562399284233", -1, -1, "", "true" },
    {38, 0, "-99999999999999999999999999998476237730", -1, -1, "", "true" },
    {38, 0, "32719660562964216", -1, -1, "", "true" },
    {38, 0, "-88518332648594317469914535963819004578", -1, -1, "", "true" },
    {38, 0, "-99999999999999999999996342888287337818", -1, -1, "", "true" },
    {38, 0, "-99999999999999999493968332646507983435", -1, -1, "", "true" },
    {38, 0, "33723913020718804097836544300505025", -1, -1, "", "true" },
    {38, 0, "4354400428325395207972221888676849", -1, -1, "", "true" },
    {38, 0, "123085895441934602986536", -1, -1, "", "true" },
    {38, 0, "-99933737109709003064502332330777589273", -1, -1, "", "true" },
    {38, 0, "4765191118770414111548266138251997342", -1, -1, "", "true" },
    {38, 0, "6965749698232589938088596409", -1, -1, "", "true" },
    {38, 0, "-99999999999999999999999993096958229348", -1, -1, "", "true" },
    {38, 0, "-99999999999999999999999819120477634601", -1, -1, "", "true" },
    {38, 0, "564005242560690651656711710177314", -1, -1, "", "true" }
    };
    test_cast_all_fail<TYPE_DECIMAL128, TYPE_INT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal128p38s0ToIntNormal) {
    CastTestCaseArray test_cases = {
    {38, 0, "3011182", -1, -1, "3011182", "false" },
    {38, 0, "4176133", -1, -1, "4176133", "false" },
    {38, 0, "365", -1, -1, "365", "false" },
    {38, 0, "12553838", -1, -1, "12553838", "false" },
    {38, 0, "656215", -1, -1, "656215", "false" }
    };
    test_cast_all<TYPE_DECIMAL128, TYPE_INT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal128p38s0ToBigIntAbnormal) {
    CastTestCaseArray test_cases = {
    {38, 0, "-99999999999999999774146723441589216466", -1, -1, "", "true" },
    {38, 0, "-99999999999999999999980538895797312123", -1, -1, "", "true" },
    {38, 0, "-99993736478374380030709958867806497042", -1, -1, "", "true" },
    {38, 0, "404862041063479666938701596", -1, -1, "", "true" },
    {38, 0, "608892144526786579238231118196", -1, -1, "", "true" },
    {38, 0, "-99645490572207290289165439011747530964", -1, -1, "", "true" },
    {38, 0, "-99999999999867636751472314794841629847", -1, -1, "", "true" },
    {38, 0, "-99999999999999999999999999999999938226", -1, -1, "", "true" },
    {38, 0, "-99999999999999998958869983555276879491", -1, -1, "", "true" },
    {38, 0, "-99999999999999999999517216109374302313", -1, -1, "", "true" },
    {38, 0, "-99999999999999999999999999247783568889", -1, -1, "", "true" },
    {38, 0, "-99999999999999999999999999999984348286", -1, -1, "", "true" },
    {38, 0, "-99999999884134700962466574862090658109", -1, -1, "", "true" },
    {38, 0, "-99839765241552395086775862006573488734", -1, -1, "", "true" },
    {38, 0, "565004871511049431356739720748", -1, -1, "", "true" },
    {38, 0, "-64191220588719036062454729943889367596", -1, -1, "", "true" },
    {38, 0, "2209191617299608558625759", -1, -1, "", "true" }
    };
    test_cast_all_fail<TYPE_DECIMAL128, TYPE_BIGINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal128p38s0ToBigIntNormal) {
    CastTestCaseArray test_cases = {
    {38, 0, "35746232042337387", -1, -1, "35746232042337387", "false" },
    {38, 0, "12019751000", -1, -1, "12019751000", "false" },
    {38, 0, "1", -1, -1, "1", "false" }
    };
    test_cast_all<TYPE_DECIMAL128, TYPE_BIGINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal128p38s0ToLargeIntNormal) {
    CastTestCaseArray test_cases = {
    {38, 0, "1246608920367585820387537429344317406", -1, -1, "1246608920367585820387537429344317406", "false" },
    {38, 0, "374542", -1, -1, "374542", "false" },
    {38, 0, "42351078736110414579168", -1, -1, "42351078736110414579168", "false" },
    {38, 0, "-99999999999999999999999999999999992474", -1, -1, "-99999999999999999999999999999999992474", "false" },
    {38, 0, "-99999999999999999999999985668833836065", -1, -1, "-99999999999999999999999985668833836065", "false" },
    {38, 0, "-99999999999999999999999999277868483648", -1, -1, "-99999999999999999999999999277868483648", "false" },
    {38, 0, "-99999999999999999999999999999999999987", -1, -1, "-99999999999999999999999999999999999987", "false" },
    {38, 0, "5012938810375474", -1, -1, "5012938810375474", "false" },
    {38, 0, "-99999999999981466869495186332371125520", -1, -1, "-99999999999981466869495186332371125520", "false" },
    {38, 0, "320163579", -1, -1, "320163579", "false" },
    {38, 0, "62491856", -1, -1, "62491856", "false" },
    {38, 0, "2264126806105846893509014945990888", -1, -1, "2264126806105846893509014945990888", "false" },
    {38, 0, "1298", -1, -1, "1298", "false" },
    {38, 0, "12292412230239570011338493641892870450", -1, -1, "12292412230239570011338493641892870450", "false" },
    {38, 0, "-99999999999999999999977511041264155781", -1, -1, "-99999999999999999999977511041264155781", "false" },
    {38, 0, "85102891323158241", -1, -1, "85102891323158241", "false" },
    {38, 0, "-99999999999999999999999999999999999975", -1, -1, "-99999999999999999999999999999999999975", "false" },
    {38, 0, "1972633595186724190146901866308471", -1, -1, "1972633595186724190146901866308471", "false" },
    {38, 0, "54852144746887833163593526", -1, -1, "54852144746887833163593526", "false" },
    {38, 0, "-99999338841041945349573135511758895461", -1, -1, "-99999338841041945349573135511758895461", "false" }
    };
    test_cast_all<TYPE_DECIMAL128, TYPE_LARGEINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal128p38s2ToBooleanNormal) {
    CastTestCaseArray test_cases = {
    {38, 2, "-999999999999999999999999952235069117.55", -1, -1, "true", "false" },
    {38, 2, "1264728562099.27", -1, -1, "true", "false" },
    {38, 2, "-999999999999998271084397519704849477.35", -1, -1, "true", "false" },
    {38, 2, "1.49", -1, -1, "true", "false" },
    {38, 2, "-999999999999999999999998772353533950.38", -1, -1, "true", "false" },
    {38, 2, "-999999999999999999529679066931892759.75", -1, -1, "true", "false" },
    {38, 2, "-999999999999999999999999999801874578.34", -1, -1, "true", "false" },
    {38, 2, "-999999999999999999999999999999999989.91", -1, -1, "true", "false" },
    {38, 2, "2799588725654555732985976192121.66", -1, -1, "true", "false" },
    {38, 2, "-999999999999999999999999999995984441.56", -1, -1, "true", "false" },
    {38, 2, "-999999999972285294232141983262863132.20", -1, -1, "true", "false" },
    {38, 2, "100650143674200983515155154740222794.63", -1, -1, "true", "false" },
    {38, 2, "281646.62", -1, -1, "true", "false" },
    {38, 2, "599355561623562035391.61", -1, -1, "true", "false" },
    {38, 2, "-999999999999999999999994940510973927.96", -1, -1, "true", "false" },
    {38, 2, "2083896971544925146.55", -1, -1, "true", "false" },
    {38, 2, "267.18", -1, -1, "true", "false" },
    {38, 2, "-999999999999990631718921702416845656.97", -1, -1, "true", "false" },
    {38, 2, "-999998499815891845019863042187082841.06", -1, -1, "true", "false" },
    {38, 2, "124.24", -1, -1, "true", "false" }
    };
    test_cast_all<TYPE_DECIMAL128, TYPE_BOOLEAN>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal128p38s2ToTinyIntAbnormal) {
    CastTestCaseArray test_cases = {
    {38, 2, "-999999999999999994313787362529975290.50", -1, -1, "", "true" },
    {38, 2, "-999999999999999999999937885592042738.88", -1, -1, "", "true" },
    {38, 2, "-999999999999999999999999938886210318.75", -1, -1, "", "true" },
    {38, 2, "282949499541982950.61", -1, -1, "", "true" },
    {38, 2, "-999763395929627387954952571800375958.34", -1, -1, "", "true" },
    {38, 2, "-999999999999964579798097102426548417.69", -1, -1, "", "true" },
    {38, 2, "-999999089614260826834280293789253316.38", -1, -1, "", "true" },
    {38, 2, "-999999999999999999999999999947337737.93", -1, -1, "", "true" },
    {38, 2, "-999999999999999999999999999999999998.73", -1, -1, "", "true" },
    {38, 2, "-989144952232749235082475789354882650.95", -1, -1, "", "true" },
    {38, 2, "-999999999999999999999999999999999882.33", -1, -1, "", "true" },
    {38, 2, "-999999999999978634955505622350502742.03", -1, -1, "", "true" },
    {38, 2, "16054895536706584287.28", -1, -1, "", "true" },
    {38, 2, "165252668.40", -1, -1, "", "true" },
    {38, 2, "371712868502422.17", -1, -1, "", "true" },
    {38, 2, "-999999999999999999999999999999999994.03", -1, -1, "", "true" },
    {38, 2, "620466979808.62", -1, -1, "", "true" },
    {38, 2, "-999999999999999999999999999999999944.51", -1, -1, "", "true" },
    {38, 2, "122226185374585.30", -1, -1, "", "true" }
    };
    test_cast_all_fail<TYPE_DECIMAL128, TYPE_TINYINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal128p38s2ToTinyIntNormal) {
    CastTestCaseArray test_cases = {
    {38, 2, "0.03", -1, -1, "0", "false" }
    };
    test_cast_all<TYPE_DECIMAL128, TYPE_TINYINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal128p38s2ToSmallIntAbnormal) {
    CastTestCaseArray test_cases = {
    {38, 2, "-999999999999999999999999705877889783.01", -1, -1, "", "true" },
    {38, 2, "-999999999999999999999999999843830431.53", -1, -1, "", "true" },
    {38, 2, "9264133115479260898386023.01", -1, -1, "", "true" },
    {38, 2, "-999999999999999999999999999999999850.09", -1, -1, "", "true" },
    {38, 2, "10992677895552723.13", -1, -1, "", "true" },
    {38, 2, "-999999999999999999999999999997528797.91", -1, -1, "", "true" },
    {38, 2, "92753532567709567508087010216.31", -1, -1, "", "true" },
    {38, 2, "41701.70", -1, -1, "", "true" },
    {38, 2, "16609718120457.73", -1, -1, "", "true" },
    {38, 2, "14985401978782.88", -1, -1, "", "true" },
    {38, 2, "7991540676674871707760468.57", -1, -1, "", "true" },
    {38, 2, "-999999999630433442983730047970016988.13", -1, -1, "", "true" },
    {38, 2, "91418631.18", -1, -1, "", "true" },
    {38, 2, "91662051984.47", -1, -1, "", "true" },
    {38, 2, "-999999999999999999714156619965716784.08", -1, -1, "", "true" },
    {38, 2, "-998571257948159157207468384614024116.55", -1, -1, "", "true" },
    {38, 2, "25293712491537665811307722255741.92", -1, -1, "", "true" }
    };
    test_cast_all_fail<TYPE_DECIMAL128, TYPE_SMALLINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal128p38s2ToSmallIntNormal) {
    CastTestCaseArray test_cases = {
    {38, 2, "0.00", -1, -1, "0", "false" },
    {38, 2, "6.82", -1, -1, "6", "false" },
    {38, 2, "38.96", -1, -1, "38", "false" }
    };
    test_cast_all<TYPE_DECIMAL128, TYPE_SMALLINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal128p38s2ToIntAbnormal) {
    CastTestCaseArray test_cases = {
    {38, 2, "38225259973028822769847757164935434.46", -1, -1, "", "true" },
    {38, 2, "-999993299298244145017019377337305695.50", -1, -1, "", "true" },
    {38, 2, "1172893106737712172909414970840720.50", -1, -1, "", "true" },
    {38, 2, "-999999935269195641552640991196889463.54", -1, -1, "", "true" },
    {38, 2, "-960604229738640452062313894575482683.79", -1, -1, "", "true" },
    {38, 2, "-999999999999999684558845474763803390.75", -1, -1, "", "true" },
    {38, 2, "-999999999999999999999997103838234663.69", -1, -1, "", "true" },
    {38, 2, "3967554199759805228347985.19", -1, -1, "", "true" },
    {38, 2, "34530356400026259235470118.57", -1, -1, "", "true" },
    {38, 2, "-999999999999811470247148737663378218.45", -1, -1, "", "true" },
    {38, 2, "424351312957725751833171296.83", -1, -1, "", "true" },
    {38, 2, "-999999999999999999999999315974105134.13", -1, -1, "", "true" },
    {38, 2, "4709977623349286.20", -1, -1, "", "true" },
    {38, 2, "-999999999999999999999999999999855783.64", -1, -1, "", "true" },
    {38, 2, "113780208827426032921177.20", -1, -1, "", "true" },
    {38, 2, "6070860791849259925558982850925878.37", -1, -1, "", "true" },
    {38, 2, "-999264584424789432184093232722881776.05", -1, -1, "", "true" }
    };
    test_cast_all_fail<TYPE_DECIMAL128, TYPE_INT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal128p38s2ToIntNormal) {
    CastTestCaseArray test_cases = {
    {38, 2, "262.03", -1, -1, "262", "false" },
    {38, 2, "63568.22", -1, -1, "63568", "false" },
    {38, 2, "28262574.32", -1, -1, "28262574", "false" }
    };
    test_cast_all<TYPE_DECIMAL128, TYPE_INT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal128p38s2ToBigIntAbnormal) {
    CastTestCaseArray test_cases = {
    {38, 2, "-999999999999999999999999999999999996.12", -1, -1, "", "true" },
    {38, 2, "-999999999997117766008521999342094288.19", -1, -1, "", "true" },
    {38, 2, "-999999543697550630336218356266203055.75", -1, -1, "", "true" },
    {38, 2, "-999999999999999085916914061948909514.87", -1, -1, "", "true" },
    {38, 2, "901390659074460659914.45", -1, -1, "", "true" },
    {38, 2, "-999999999999999999999999709712008905.27", -1, -1, "", "true" },
    {38, 2, "-999999999999999999999999999999520577.86", -1, -1, "", "true" },
    {38, 2, "-999999999999999999999965545204254574.11", -1, -1, "", "true" },
    {38, 2, "-999999360020202605867034094209894474.02", -1, -1, "", "true" },
    {38, 2, "-999997134628740162002910766800118935.57", -1, -1, "", "true" },
    {38, 2, "-999331482854830988782014342680752562.05", -1, -1, "", "true" },
    {38, 2, "-999999999999999999999999999999999999.97", -1, -1, "", "true" },
    {38, 2, "3200261517576174426392557.60", -1, -1, "", "true" }
    };
    test_cast_all_fail<TYPE_DECIMAL128, TYPE_BIGINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal128p38s2ToBigIntNormal) {
    CastTestCaseArray test_cases = {
    {38, 2, "20642033673.86", -1, -1, "20642033673", "false" },
    {38, 2, "134801533.70", -1, -1, "134801533", "false" },
    {38, 2, "7089147991485724.55", -1, -1, "7089147991485724", "false" },
    {38, 2, "160.79", -1, -1, "160", "false" },
    {38, 2, "16.57", -1, -1, "16", "false" },
    {38, 2, "4286.39", -1, -1, "4286", "false" }
    };
    test_cast_all<TYPE_DECIMAL128, TYPE_BIGINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal128p38s2ToLargeIntNormal) {
    CastTestCaseArray test_cases = {
    {38, 2, "4318016959330735.42", -1, -1, "4318016959330735", "false" },
    {38, 2, "0.01", -1, -1, "0", "false" },
    {38, 2, "-999999999999999999999633543696978937.23", -1, -1, "-999999999999999999999633543696978937", "false" },
    {38, 2, "4124135199930274.42", -1, -1, "4124135199930274", "false" },
    {38, 2, "25997901471937753460702381730619.80", -1, -1, "25997901471937753460702381730619", "false" },
    {38, 2, "-999999999999999999999999999999999999.93", -1, -1, "-999999999999999999999999999999999999", "false" },
    {38, 2, "-999999999999995214249725909001871801.22", -1, -1, "-999999999999995214249725909001871801", "false" },
    {38, 2, "-298588165395307682683126962841158942.70", -1, -1, "-298588165395307682683126962841158942", "false" },
    {38, 2, "12764099065420422495783249405575.54", -1, -1, "12764099065420422495783249405575", "false" },
    {38, 2, "2309989.86", -1, -1, "2309989", "false" },
    {38, 2, "1336250021218.45", -1, -1, "1336250021218", "false" },
    {38, 2, "-999957655863015650331823179297518729.49", -1, -1, "-999957655863015650331823179297518729", "false" },
    {38, 2, "36886653547176675845.30", -1, -1, "36886653547176675845", "false" },
    {38, 2, "-999999999999981903454995383201635766.18", -1, -1, "-999999999999981903454995383201635766", "false" },
    {38, 2, "-999999999998875344350289196759090140.58", -1, -1, "-999999999998875344350289196759090140", "false" },
    {38, 2, "689103174812715.90", -1, -1, "689103174812715", "false" },
    {38, 2, "-999999407429766291490915868013793433.15", -1, -1, "-999999407429766291490915868013793433", "false" },
    {38, 2, "-999999999999999999491892875756946524.91", -1, -1, "-999999999999999999491892875756946524", "false" },
    {38, 2, "14930775961550739.46", -1, -1, "14930775961550739", "false" },
    {38, 2, "276332815.50", -1, -1, "276332815", "false" }
    };
    test_cast_all<TYPE_DECIMAL128, TYPE_LARGEINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal128p38s9ToBooleanNormal) {
    CastTestCaseArray test_cases = {
    {38, 9, "-99999999999999999999999573619.892528566", -1, -1, "true", "false" },
    {38, 9, "707486638209800.322140396", -1, -1, "true", "false" },
    {38, 9, "0.000010977", -1, -1, "true", "false" },
    {38, 9, "0.000003101", -1, -1, "true", "false" },
    {38, 9, "-99999999999999999999999346856.667866976", -1, -1, "true", "false" },
    {38, 9, "-99999999999999999999999999884.851108112", -1, -1, "true", "false" },
    {38, 9, "-99903919933433561641897882671.430789663", -1, -1, "true", "false" },
    {38, 9, "-99999999999999999999755113659.425136794", -1, -1, "true", "false" },
    {38, 9, "1652411555792437541560816093.058521164", -1, -1, "true", "false" },
    {38, 9, "-99999999999999592705215911131.956908779", -1, -1, "true", "false" },
    {38, 9, "-99999999999991344274824325120.260220320", -1, -1, "true", "false" },
    {38, 9, "778853.921970692", -1, -1, "true", "false" },
    {38, 9, "129707412292128610536310569.519135204", -1, -1, "true", "false" },
    {38, 9, "13327.606989863", -1, -1, "true", "false" },
    {38, 9, "-99999999999999999999999999999.999999783", -1, -1, "true", "false" },
    {38, 9, "4.20E-7", -1, -1, "true", "false" },
    {38, 9, "29584886035833536.235576701", -1, -1, "true", "false" },
    {38, 9, "1184107095028552.518372480", -1, -1, "true", "false" },
    {38, 9, "0.044974665", -1, -1, "true", "false" },
    {38, 9, "882733012.686079963", -1, -1, "true", "false" }
    };
    test_cast_all<TYPE_DECIMAL128, TYPE_BOOLEAN>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal128p38s9ToTinyIntAbnormal) {
    CastTestCaseArray test_cases = {
    {38, 9, "-99999999999999999999999999999.999999992", -1, -1, "", "true" },
    {38, 9, "-99999999949050478693550601540.725207161", -1, -1, "", "true" },
    {38, 9, "-99994497672491644880728325285.068583767", -1, -1, "", "true" },
    {38, 9, "4135344644348.519311334", -1, -1, "", "true" },
    {38, 9, "261998261993092146523.150726478", -1, -1, "", "true" },
    {38, 9, "69299258.431290883", -1, -1, "", "true" },
    {38, 9, "-98244583327321145386073380622.640009384", -1, -1, "", "true" },
    {38, 9, "-99999999999999999999999997774.756911423", -1, -1, "", "true" },
    {38, 9, "14882930686191253.398417741", -1, -1, "", "true" },
    {38, 9, "22990297367756897774751.682598093", -1, -1, "", "true" },
    {38, 9, "-99999999999999999999997299213.714430771", -1, -1, "", "true" },
    {38, 9, "70141183460469231731687303715.884105728", -1, -1, "", "true" },
    {38, 9, "1672233675432729595722.781326227", -1, -1, "", "true" },
    {38, 9, "198814232847760385.291332211", -1, -1, "", "true" },
    {38, 9, "-99999999999999999391159152863.323952245", -1, -1, "", "true" },
    {38, 9, "-99999999999871015734040102888.431652652", -1, -1, "", "true" },
    {38, 9, "-99999999999999999999968990312.599400431", -1, -1, "", "true" },
    {38, 9, "-99999999999999999999999999999.999948410", -1, -1, "", "true" },
    {38, 9, "324898055513.245129622", -1, -1, "", "true" }
    };
    test_cast_all_fail<TYPE_DECIMAL128, TYPE_TINYINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal128p38s9ToTinyIntNormal) {
    CastTestCaseArray test_cases = {
    {38, 9, "0.036724045", -1, -1, "0", "false" }
    };
    test_cast_all<TYPE_DECIMAL128, TYPE_TINYINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal128p38s9ToSmallIntAbnormal) {
    CastTestCaseArray test_cases = {
    {38, 9, "7745490475221289.784947866", -1, -1, "", "true" },
    {38, 9, "-99999999999999999999999999622.656310471", -1, -1, "", "true" },
    {38, 9, "41045738588795914748.068319196", -1, -1, "", "true" },
    {38, 9, "-99999999934403983003740500379.101067498", -1, -1, "", "true" },
    {38, 9, "25253080269977291928606050.669948633", -1, -1, "", "true" },
    {38, 9, "-99999999999999999999999999995.871915082", -1, -1, "", "true" },
    {38, 9, "-99999999999999999999999999999.999796500", -1, -1, "", "true" },
    {38, 9, "-99999999999999999999999999999.999999249", -1, -1, "", "true" },
    {38, 9, "378256.433348454", -1, -1, "", "true" },
    {38, 9, "-99999999999999999999999999999.999999372", -1, -1, "", "true" },
    {38, 9, "-99990635949924609649046137859.704416108", -1, -1, "", "true" },
    {38, 9, "-92986795742549781482082095993.624292586", -1, -1, "", "true" },
    {38, 9, "-99999999999997859783773996312.196828022", -1, -1, "", "true" },
    {38, 9, "39150.691300999", -1, -1, "", "true" },
    {38, 9, "-99999999999999999999999999999.999987302", -1, -1, "", "true" }
    };
    test_cast_all_fail<TYPE_DECIMAL128, TYPE_SMALLINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal128p38s9ToSmallIntNormal) {
    CastTestCaseArray test_cases = {
    {38, 9, "0.000044861", -1, -1, "0", "false" },
    {38, 9, "0.000116653", -1, -1, "0", "false" },
    {38, 9, "251.506461337", -1, -1, "251", "false" },
    {38, 9, "3.44E-7", -1, -1, "0", "false" },
    {38, 9, "14475.668159673", -1, -1, "14475", "false" }
    };
    test_cast_all<TYPE_DECIMAL128, TYPE_SMALLINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal128p38s9ToIntAbnormal) {
    CastTestCaseArray test_cases = {
    {38, 9, "2444829636929024.580347154", -1, -1, "", "true" },
    {38, 9, "-99189356508216744242088377671.675622560", -1, -1, "", "true" },
    {38, 9, "-99999999102808586000288935214.118863083", -1, -1, "", "true" },
    {38, 9, "28671362849804457174380188711.583393114", -1, -1, "", "true" },
    {38, 9, "281874889006240190610.522217699", -1, -1, "", "true" },
    {38, 9, "18642309270979807122410305156.542046247", -1, -1, "", "true" },
    {38, 9, "-99999999999999999999999999999.999506342", -1, -1, "", "true" },
    {38, 9, "-99999999999999999999999999999.999958872", -1, -1, "", "true" },
    {38, 9, "-99999999999999999999967418011.466149020", -1, -1, "", "true" },
    {38, 9, "-99999999999971936317023137316.641382089", -1, -1, "", "true" },
    {38, 9, "-99999999999999999999999999992.768220080", -1, -1, "", "true" },
    {38, 9, "-99999999999988092416241856573.884948116", -1, -1, "", "true" },
    {38, 9, "1592791929602169141686631410.696510725", -1, -1, "", "true" },
    {38, 9, "6896606463260303479.918029953", -1, -1, "", "true" }
    };
    test_cast_all_fail<TYPE_DECIMAL128, TYPE_INT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal128p38s9ToIntNormal) {
    CastTestCaseArray test_cases = {
    {38, 9, "1.42E-7", -1, -1, "0", "false" },
    {38, 9, "0.000028749", -1, -1, "0", "false" },
    {38, 9, "0.322258429", -1, -1, "0", "false" },
    {38, 9, "18.584432897", -1, -1, "18", "false" },
    {38, 9, "15862593.306883262", -1, -1, "15862593", "false" },
    {38, 9, "3474.800306645", -1, -1, "3474", "false" }
    };
    test_cast_all<TYPE_DECIMAL128, TYPE_INT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal128p38s9ToBigIntAbnormal) {
    CastTestCaseArray test_cases = {
    {38, 9, "-99999999999999999999999999695.766106100", -1, -1, "", "true" },
    {38, 9, "-99999999999999999999999998430.347367851", -1, -1, "", "true" },
    {38, 9, "-99999306373336916270951456507.741814648", -1, -1, "", "true" },
    {38, 9, "-99999999999999999999954942372.922521802", -1, -1, "", "true" },
    {38, 9, "-99999999999999754867913004659.926878716", -1, -1, "", "true" },
    {38, 9, "-99999999802174027519840119206.210223983", -1, -1, "", "true" },
    {38, 9, "-99999999999999996081887905738.167072609", -1, -1, "", "true" },
    {38, 9, "-99999999999999999999999999999.999998516", -1, -1, "", "true" },
    {38, 9, "70141183460469231731687303715.884105728", -1, -1, "", "true" },
    {38, 9, "-99999999999974914872392239877.844157068", -1, -1, "", "true" },
    {38, 9, "-99960750109296900688611320833.157214071", -1, -1, "", "true" },
    {38, 9, "-99999999997793371864940085269.871081285", -1, -1, "", "true" },
    {38, 9, "-99999998759444238079118464948.239707046", -1, -1, "", "true" },
    {38, 9, "-99999999999999999999999999999.999999779", -1, -1, "", "true" },
    {38, 9, "-99999592054000615470281543619.667722858", -1, -1, "", "true" }
    };
    test_cast_all_fail<TYPE_DECIMAL128, TYPE_BIGINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal128p38s9ToBigIntNormal) {
    CastTestCaseArray test_cases = {
    {38, 9, "67.674799167", -1, -1, "67", "false" },
    {38, 9, "8850362668.063292300", -1, -1, "8850362668", "false" },
    {38, 9, "51672.676441759", -1, -1, "51672", "false" },
    {38, 9, "22242530646913.504831247", -1, -1, "22242530646913", "false" },
    {38, 9, "0.001111576", -1, -1, "0", "false" }
    };
    test_cast_all<TYPE_DECIMAL128, TYPE_BIGINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal128p38s9ToLargeIntNormal) {
    CastTestCaseArray test_cases = {
    {38, 9, "-99999999999999999999999999999.971382664", -1, -1, "-99999999999999999999999999999", "false" },
    {38, 9, "745073943040458077459117391.089983975", -1, -1, "745073943040458077459117391", "false" },
    {38, 9, "-99994213274150500891666350899.051103047", -1, -1, "-99994213274150500891666350899", "false" },
    {38, 9, "293215.216245030", -1, -1, "293215", "false" },
    {38, 9, "68407.682633023", -1, -1, "68407", "false" },
    {38, 9, "1.417104681", -1, -1, "1", "false" },
    {38, 9, "28.292249767", -1, -1, "28", "false" },
    {38, 9, "1823981.422902648", -1, -1, "1823981", "false" },
    {38, 9, "-99993956577397127121795917813.946754502", -1, -1, "-99993956577397127121795917813", "false" },
    {38, 9, "3272774375272359246611.434931834", -1, -1, "3272774375272359246611", "false" },
    {38, 9, "-99999999999999999999999998432.708061215", -1, -1, "-99999999999999999999999998432", "false" },
    {38, 9, "38235935174756744409538626356.256039895", -1, -1, "38235935174756744409538626356", "false" },
    {38, 9, "9.080908026", -1, -1, "9", "false" },
    {38, 9, "773558082215318963525.194938640", -1, -1, "773558082215318963525", "false" },
    {38, 9, "-99999999997218661031699324965.893614590", -1, -1, "-99999999997218661031699324965", "false" },
    {38, 9, "-99999996450205237152129292567.812956017", -1, -1, "-99999996450205237152129292567", "false" },
    {38, 9, "-99999999999999999999999711846.265962776", -1, -1, "-99999999999999999999999711846", "false" },
    {38, 9, "-99999999999999984017088725240.598785608", -1, -1, "-99999999999999984017088725240", "false" },
    {38, 9, "132103721558.531315506", -1, -1, "132103721558", "false" },
    {38, 9, "2643797.850657169", -1, -1, "2643797", "false" }
    };
    test_cast_all<TYPE_DECIMAL128, TYPE_LARGEINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal128p38s13ToBooleanNormal) {
    CastTestCaseArray test_cases = {
    {38, 13, "0.0060099041825", -1, -1, "true", "false" },
    {38, 13, "-9999999999999075077712799.6853853228337", -1, -1, "true", "false" },
    {38, 13, "5194224835.0469432704542", -1, -1, "true", "false" },
    {38, 13, "-9999999999999999999576926.4865101352958", -1, -1, "true", "false" },
    {38, 13, "-9999999999999999418504864.9514334502542", -1, -1, "true", "false" },
    {38, 13, "-9999987988596157227735894.0435367899363", -1, -1, "true", "false" },
    {38, 13, "12005385866152394062893.6774779936192", -1, -1, "true", "false" },
    {38, 13, "-9999999999992373921215335.6679377897177", -1, -1, "true", "false" },
    {38, 13, "102203.1260227044128", -1, -1, "true", "false" },
    {38, 13, "-9999999991649123868076323.1955976451332", -1, -1, "true", "false" },
    {38, 13, "-9999999999999999999999999.9999999996329", -1, -1, "true", "false" },
    {38, 13, "0.0026090720020", -1, -1, "true", "false" },
    {38, 13, "1.2057E-9", -1, -1, "true", "false" },
    {38, 13, "-9999999999999999999619997.4257429421360", -1, -1, "true", "false" },
    {38, 13, "-9999999999998106737418189.3072713526802", -1, -1, "true", "false" },
    {38, 13, "4601008.9765902257268", -1, -1, "true", "false" },
    {38, 13, "-9999999999999999999999999.9999999999998", -1, -1, "true", "false" },
    {38, 13, "961644525222595467.4824340584538", -1, -1, "true", "false" },
    {38, 13, "3.7238463394330", -1, -1, "true", "false" },
    {38, 13, "702582388627.2219558955530", -1, -1, "true", "false" }
    };
    test_cast_all<TYPE_DECIMAL128, TYPE_BOOLEAN>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal128p38s13ToTinyIntAbnormal) {
    CastTestCaseArray test_cases = {
    {38, 13, "-9999999999999999999999993.3337644403408", -1, -1, "", "true" },
    {38, 13, "1361745856787664783.7179007016632", -1, -1, "", "true" },
    {38, 13, "-9999999542987570502902945.3295893538293", -1, -1, "", "true" },
    {38, 13, "343590536204933.6230721715167", -1, -1, "", "true" },
    {38, 13, "-9999831471797710638446385.6979292999762", -1, -1, "", "true" },
    {38, 13, "-9999999521408110520865695.0955321352246", -1, -1, "", "true" },
    {38, 13, "3277919877699440.3607060478254", -1, -1, "", "true" },
    {38, 13, "-9999999999999999999999999.9999950144694", -1, -1, "", "true" },
    {38, 13, "16848770325646031323.5512170483053", -1, -1, "", "true" },
    {38, 13, "51922409673.6882495143443", -1, -1, "", "true" },
    {38, 13, "-9999999999999999999999996.2897149718393", -1, -1, "", "true" },
    {38, 13, "-9997368037692537680047394.2928360351994", -1, -1, "", "true" },
    {38, 13, "1307094723805694379721580.8813730827034", -1, -1, "", "true" },
    {38, 13, "-9999999999999122953212453.2957246806851", -1, -1, "", "true" }
    };
    test_cast_all_fail<TYPE_DECIMAL128, TYPE_TINYINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal128p38s13ToTinyIntNormal) {
    CastTestCaseArray test_cases = {
    {38, 13, "0.0000244942188", -1, -1, "0", "false" },
    {38, 13, "4.66689E-8", -1, -1, "0", "false" },
    {38, 13, "0E-13", -1, -1, "0", "false" },
    {38, 13, "5E-13", -1, -1, "0", "false" },
    {38, 13, "8E-13", -1, -1, "0", "false" },
    {38, 13, "1.818279E-7", -1, -1, "0", "false" }
    };
    test_cast_all<TYPE_DECIMAL128, TYPE_TINYINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal128p38s13ToSmallIntAbnormal) {
    CastTestCaseArray test_cases = {
    {38, 13, "320415714217094287.1965995109768", -1, -1, "", "true" },
    {38, 13, "2105721938560942980471959.5066692863647", -1, -1, "", "true" },
    {38, 13, "-9999999999999999999999999.9999550807591", -1, -1, "", "true" },
    {38, 13, "-9943817488794600182497790.0939814173029", -1, -1, "", "true" },
    {38, 13, "-9999999999987589556839975.3595503608824", -1, -1, "", "true" },
    {38, 13, "-9999999999999999999999999.9999999982600", -1, -1, "", "true" },
    {38, 13, "-9999964020091282886474480.5129486768839", -1, -1, "", "true" },
    {38, 13, "-9999999999999999999999999.9999794505662", -1, -1, "", "true" },
    {38, 13, "-9999999999999992219276738.6980643173995", -1, -1, "", "true" },
    {38, 13, "-9999999999999999999890440.2760566466175", -1, -1, "", "true" },
    {38, 13, "-9999999999999999999999999.9999999999974", -1, -1, "", "true" },
    {38, 13, "7014118346046923173168730.3715884105728", -1, -1, "", "true" },
    {38, 13, "-9999994006538049535111687.5914903700338", -1, -1, "", "true" },
    {38, 13, "-9999999999999999999762851.2186167947335", -1, -1, "", "true" },
    {38, 13, "196814.3435285573264", -1, -1, "", "true" },
    {38, 13, "-9999999999999999972959273.3046296116800", -1, -1, "", "true" }
    };
    test_cast_all_fail<TYPE_DECIMAL128, TYPE_SMALLINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal128p38s13ToSmallIntNormal) {
    CastTestCaseArray test_cases = {
    {38, 13, "0.0000153982135", -1, -1, "0", "false" },
    {38, 13, "0.2152591244937", -1, -1, "0", "false" },
    {38, 13, "403.1310894256450", -1, -1, "403", "false" },
    {38, 13, "6.691292E-7", -1, -1, "0", "false" }
    };
    test_cast_all<TYPE_DECIMAL128, TYPE_SMALLINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal128p38s13ToIntAbnormal) {
    CastTestCaseArray test_cases = {
    {38, 13, "-9999999999999999999999999.9999628570201", -1, -1, "", "true" },
    {38, 13, "-9999999999999999999999999.9999999999932", -1, -1, "", "true" },
    {38, 13, "7141169671577181.4314391937017", -1, -1, "", "true" },
    {38, 13, "-9999999999999999999999999.9999634660880", -1, -1, "", "true" },
    {38, 13, "-9999999999999999999999999.9999999999939", -1, -1, "", "true" },
    {38, 13, "-9999999999999999992931238.2230086170661", -1, -1, "", "true" },
    {38, 13, "25741988832343306678946.6088172262968", -1, -1, "", "true" },
    {38, 13, "-9999999999999999999833677.6294768462913", -1, -1, "", "true" },
    {38, 13, "-9999999999999999969018288.1777121099695", -1, -1, "", "true" },
    {38, 13, "821811749984668.2692074323257", -1, -1, "", "true" }
    };
    test_cast_all_fail<TYPE_DECIMAL128, TYPE_INT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal128p38s13ToIntNormal) {
    CastTestCaseArray test_cases = {
    {38, 13, "0.0028572206685", -1, -1, "0", "false" },
    {38, 13, "68173.1535825795520", -1, -1, "68173", "false" },
    {38, 13, "6.470E-10", -1, -1, "0", "false" },
    {38, 13, "1168.1122228196560", -1, -1, "1168", "false" },
    {38, 13, "5.6464891010798", -1, -1, "5", "false" },
    {38, 13, "10307.9930355269771", -1, -1, "10307", "false" },
    {38, 13, "4.51520E-8", -1, -1, "0", "false" },
    {38, 13, "166863.2440991865002", -1, -1, "166863", "false" },
    {38, 13, "899.7170519534903", -1, -1, "899", "false" },
    {38, 13, "5288989.0334196268624", -1, -1, "5288989", "false" }
    };
    test_cast_all<TYPE_DECIMAL128, TYPE_INT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal128p38s13ToBigIntAbnormal) {
    CastTestCaseArray test_cases = {
    {38, 13, "-9999999999884100384740810.3438852021251", -1, -1, "", "true" },
    {38, 13, "-9999999999999999999999999.9999999999998", -1, -1, "", "true" },
    {38, 13, "-9994411530290565035629837.8270429801631", -1, -1, "", "true" },
    {38, 13, "-9999999999999999987641310.4901843495743", -1, -1, "", "true" },
    {38, 13, "-9999999900222141443016583.7418985395506", -1, -1, "", "true" },
    {38, 13, "-9999999999999999999999999.9999999999932", -1, -1, "", "true" },
    {38, 13, "-9999999999999998664739881.4483639424423", -1, -1, "", "true" },
    {38, 13, "825844818421613322597552.3510619900062", -1, -1, "", "true" },
    {38, 13, "-9999999998997879082006820.1149068216248", -1, -1, "", "true" },
    {38, 13, "-9999999999999999999993765.2763140795052", -1, -1, "", "true" },
    {38, 13, "-9976262438293289717054372.5303929918966", -1, -1, "", "true" },
    {38, 13, "-9999993510972886112039076.0568441207850", -1, -1, "", "true" }
    };
    test_cast_all_fail<TYPE_DECIMAL128, TYPE_BIGINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal128p38s13ToBigIntNormal) {
    CastTestCaseArray test_cases = {
    {38, 13, "0.0061826876670", -1, -1, "0", "false" },
    {38, 13, "0.1564634883637", -1, -1, "0", "false" },
    {38, 13, "19407357283181406.0673735195204", -1, -1, "19407357283181406", "false" },
    {38, 13, "2.55E-11", -1, -1, "0", "false" },
    {38, 13, "1.619659E-7", -1, -1, "0", "false" },
    {38, 13, "25230483847.6997874046661", -1, -1, "25230483847", "false" },
    {38, 13, "101254688184293597.6256365147209", -1, -1, "101254688184293597", "false" },
    {38, 13, "699658836783295418.7035351169284", -1, -1, "699658836783295418", "false" }
    };
    test_cast_all<TYPE_DECIMAL128, TYPE_BIGINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal128p38s13ToLargeIntNormal) {
    CastTestCaseArray test_cases = {
    {38, 13, "-8733456262288748862705726.5472149987969", -1, -1, "-8733456262288748862705726", "false" },
    {38, 13, "0.0003687931398", -1, -1, "0", "false" },
    {38, 13, "63547838625288648868.8008774790644", -1, -1, "63547838625288648868", "false" },
    {38, 13, "-9999999999999999999999999.9999999972398", -1, -1, "-9999999999999999999999999", "false" },
    {38, 13, "-9999999999999931179215708.9712185252248", -1, -1, "-9999999999999931179215708", "false" },
    {38, 13, "-9999999999999999999999999.9998819394929", -1, -1, "-9999999999999999999999999", "false" },
    {38, 13, "-9999999999999999999999999.9999999997473", -1, -1, "-9999999999999999999999999", "false" },
    {38, 13, "-9999999999999999999999999.9999999999983", -1, -1, "-9999999999999999999999999", "false" },
    {38, 13, "237715758340.8417657324408", -1, -1, "237715758340", "false" },
    {38, 13, "0.0061511892030", -1, -1, "0", "false" },
    {38, 13, "2853.2667532362008", -1, -1, "2853", "false" },
    {38, 13, "-9999999625679341346440685.5972711124353", -1, -1, "-9999999625679341346440685", "false" },
    {38, 13, "-2985881653953076826831269.6284115894270", -1, -1, "-2985881653953076826831269", "false" },
    {38, 13, "-9999999999999534881180335.0175502082359", -1, -1, "-9999999999999534881180335", "false" },
    {38, 13, "-9999999999999999999999999.9998867514025", -1, -1, "-9999999999999999999999999", "false" },
    {38, 13, "3568450.4673235259138", -1, -1, "3568450", "false" },
    {38, 13, "1521962119328858551861245.0614069500174", -1, -1, "1521962119328858551861245", "false" },
    {38, 13, "0.0421035003633", -1, -1, "0", "false" },
    {38, 13, "5.66218E-8", -1, -1, "0", "false" },
    {38, 13, "-9999999999999999834098847.8012971719932", -1, -1, "-9999999999999999834098847", "false" }
    };
    test_cast_all<TYPE_DECIMAL128, TYPE_LARGEINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal128p38s18ToBooleanNormal) {
    CastTestCaseArray test_cases = {
    {38, 18, "1662318.240410368481485917", -1, -1, "true", "false" },
    {38, 18, "16254458067851343672.105965113685611399", -1, -1, "true", "false" },
    {38, 18, "-99999999999999999997.430248534384178614", -1, -1, "true", "false" },
    {38, 18, "10457419954294385.104420843171906499", -1, -1, "true", "false" },
    {38, 18, "-99924228276457736503.027487355052035923", -1, -1, "true", "false" },
    {38, 18, "3.95323032E-10", -1, -1, "true", "false" },
    {38, 18, "-99999999999999999999.999999997691659034", -1, -1, "true", "false" },
    {38, 18, "1.25408444E-10", -1, -1, "true", "false" },
    {38, 18, "664380343.472620712322029567", -1, -1, "true", "false" },
    {38, 18, "19.020552771416404880", -1, -1, "true", "false" },
    {38, 18, "127598437097533766.396197816848089392", -1, -1, "true", "false" },
    {38, 18, "55658781.502732552814593013", -1, -1, "true", "false" },
    {38, 18, "16354101.957653262847235350", -1, -1, "true", "false" },
    {38, 18, "-99999999999995306208.129392560937331175", -1, -1, "true", "false" },
    {38, 18, "439814.643965877640109256", -1, -1, "true", "false" },
    {38, 18, "-99999999999999999999.999874203933595042", -1, -1, "true", "false" },
    {38, 18, "0.004114234833758957", -1, -1, "true", "false" },
    {38, 18, "-99999781253879517977.502595112650014221", -1, -1, "true", "false" },
    {38, 18, "69391489007653701370.326991054995027550", -1, -1, "true", "false" },
    {38, 18, "-99999999999999999999.999999999892466384", -1, -1, "true", "false" }
    };
    test_cast_all<TYPE_DECIMAL128, TYPE_BOOLEAN>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal128p38s18ToTinyIntAbnormal) {
    CastTestCaseArray test_cases = {
    {38, 18, "2007.142097721135182683", -1, -1, "", "true" },
    {38, 18, "1295.031873434241396640", -1, -1, "", "true" },
    {38, 18, "-99999999999999999952.503858999917662650", -1, -1, "", "true" },
    {38, 18, "-99999999999999999999.999999999999999974", -1, -1, "", "true" },
    {38, 18, "45697575503447.166615216113295033", -1, -1, "", "true" },
    {38, 18, "-99999996341610547306.913703190720972519", -1, -1, "", "true" },
    {38, 18, "-99999999999999999999.999999999988995369", -1, -1, "", "true" },
    {38, 18, "2455611095504270780.365302145934940306", -1, -1, "", "true" },
    {38, 18, "-99999999999999999999.999999999999075524", -1, -1, "", "true" },
    {38, 18, "-99999999999999999999.999999999999998409", -1, -1, "", "true" },
    {38, 18, "-99999999999999999999.999999999999999879", -1, -1, "", "true" },
    {38, 18, "-91651616880858072532.310266742438912324", -1, -1, "", "true" },
    {38, 18, "-99999999999999995729.696781434257936188", -1, -1, "", "true" },
    {38, 18, "3021687411998830237.300428310257162252", -1, -1, "", "true" }
    };
    test_cast_all_fail<TYPE_DECIMAL128, TYPE_TINYINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal128p38s18ToTinyIntNormal) {
    CastTestCaseArray test_cases = {
    {38, 18, "11.797408975657230933", -1, -1, "11", "false" },
    {38, 18, "2.293344103351805983", -1, -1, "2", "false" },
    {38, 18, "0.033039756080239133", -1, -1, "0", "false" },
    {38, 18, "1.63135E-13", -1, -1, "0", "false" },
    {38, 18, "4E-18", -1, -1, "0", "false" },
    {38, 18, "3.771856177E-9", -1, -1, "0", "false" }
    };
    test_cast_all<TYPE_DECIMAL128, TYPE_TINYINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal128p38s18ToSmallIntAbnormal) {
    CastTestCaseArray test_cases = {
    {38, 18, "-99999999999999999999.999999466104356330", -1, -1, "", "true" },
    {38, 18, "-99999999999999999955.730008633694729290", -1, -1, "", "true" },
    {38, 18, "-99999999999999999860.329357665739543329", -1, -1, "", "true" },
    {38, 18, "60934964087003.968834909372377063", -1, -1, "", "true" },
    {38, 18, "112687410.476015705612934381", -1, -1, "", "true" },
    {38, 18, "3703098629246.051417880649033985", -1, -1, "", "true" },
    {38, 18, "-99999999999951205108.154132632244452359", -1, -1, "", "true" },
    {38, 18, "-96902637181640581300.936373131243516435", -1, -1, "", "true" },
    {38, 18, "-99999999999999965830.755367816320076912", -1, -1, "", "true" },
    {38, 18, "-36701654983812932410.497058426528531509", -1, -1, "", "true" },
    {38, 18, "-99999999999999999999.997222040110775885", -1, -1, "", "true" },
    {38, 18, "-99999999999999999999.999999999985507218", -1, -1, "", "true" },
    {38, 18, "-99999999999999999999.097748203721825876", -1, -1, "", "true" },
    {38, 18, "-99999999999999999999.999999999999548759", -1, -1, "", "true" },
    {38, 18, "-99999999890228803730.043101743117905595", -1, -1, "", "true" },
    {38, 18, "79500169511.101434192987169854", -1, -1, "", "true" }
    };
    test_cast_all_fail<TYPE_DECIMAL128, TYPE_SMALLINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal128p38s18ToSmallIntNormal) {
    CastTestCaseArray test_cases = {
    {38, 18, "65.603004134233123238", -1, -1, "65", "false" },
    {38, 18, "4E-18", -1, -1, "0", "false" },
    {38, 18, "1.59215686603E-7", -1, -1, "0", "false" },
    {38, 18, "1.4E-17", -1, -1, "0", "false" }
    };
    test_cast_all<TYPE_DECIMAL128, TYPE_SMALLINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal128p38s18ToIntAbnormal) {
    CastTestCaseArray test_cases = {
    {38, 18, "-99839204680309502567.185269069372611630", -1, -1, "", "true" },
    {38, 18, "-99999999999999999999.999999937213491912", -1, -1, "", "true" },
    {38, 18, "-99999999999999999999.999999999999757412", -1, -1, "", "true" },
    {38, 18, "-99999999877032295279.255316417797712804", -1, -1, "", "true" },
    {38, 18, "-99999999999999850636.579835395732972550", -1, -1, "", "true" },
    {38, 18, "8402120549514387.975640919173743196", -1, -1, "", "true" },
    {38, 18, "-99999999999999999999.999999999995889284", -1, -1, "", "true" },
    {38, 18, "4029510104635764844.986802808546316698", -1, -1, "", "true" },
    {38, 18, "-99999999999999999999.999989024727021571", -1, -1, "", "true" },
    {38, 18, "-99998449661589685433.347849909376379098", -1, -1, "", "true" },
    {38, 18, "-99999999999998902598.277120481266412602", -1, -1, "", "true" }
    };
    test_cast_all_fail<TYPE_DECIMAL128, TYPE_INT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal128p38s18ToIntNormal) {
    CastTestCaseArray test_cases = {
    {38, 18, "3.1E-17", -1, -1, "0", "false" },
    {38, 18, "2.103E-15", -1, -1, "0", "false" },
    {38, 18, "0.000485796696596059", -1, -1, "0", "false" },
    {38, 18, "2064730.776184276007624386", -1, -1, "2064730", "false" },
    {38, 18, "84.865773354126210525", -1, -1, "84", "false" },
    {38, 18, "3.679051E-12", -1, -1, "0", "false" },
    {38, 18, "0.003565603967636740", -1, -1, "0", "false" },
    {38, 18, "500253.196296600267915731", -1, -1, "500253", "false" },
    {38, 18, "0.000007662920414870", -1, -1, "0", "false" }
    };
    test_cast_all<TYPE_DECIMAL128, TYPE_INT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal128p38s18ToBigIntAbnormal) {
    CastTestCaseArray test_cases = {
    {38, 18, "-99999999999999999999.999999999999986973", -1, -1, "", "true" },
    {38, 18, "-99399002228885079228.981912764737909016", -1, -1, "", "true" },
    {38, 18, "-99999999999999999300.286377039062784360", -1, -1, "", "true" },
    {38, 18, "33342142725694071218.148230420497182206", -1, -1, "", "true" },
    {38, 18, "-99999999999999999999.999999999999999996", -1, -1, "", "true" },
    {38, 18, "-99681245081706240221.387250731799161164", -1, -1, "", "true" },
    {38, 18, "-99999999999999999870.755678830834651361", -1, -1, "", "true" },
    {38, 18, "-99999999999999998108.341421023749933420", -1, -1, "", "true" }
    };
    test_cast_all_fail<TYPE_DECIMAL128, TYPE_BIGINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal128p38s18ToBigIntNormal) {
    CastTestCaseArray test_cases = {
    {38, 18, "126.113881021197308078", -1, -1, "126", "false" },
    {38, 18, "4612694774289330.174202949180908626", -1, -1, "4612694774289330", "false" },
    {38, 18, "0.000001317126534552", -1, -1, "0", "false" },
    {38, 18, "7.4250E-14", -1, -1, "0", "false" },
    {38, 18, "4.7872E-14", -1, -1, "0", "false" },
    {38, 18, "278.176272156599810338", -1, -1, "278", "false" },
    {38, 18, "0.248618615860981653", -1, -1, "0", "false" },
    {38, 18, "0.016216448511543915", -1, -1, "0", "false" },
    {38, 18, "6.195605325771564617", -1, -1, "6", "false" },
    {38, 18, "1.08E-16", -1, -1, "0", "false" },
    {38, 18, "0E-18", -1, -1, "0", "false" },
    {38, 18, "0.000014943793783939", -1, -1, "0", "false" }
    };
    test_cast_all<TYPE_DECIMAL128, TYPE_BIGINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal128p38s18ToLargeIntNormal) {
    CastTestCaseArray test_cases = {
    {38, 18, "-32616214688032419206.486374370392852536", -1, -1, "-32616214688032419206", "false" },
    {38, 18, "8.7353E-14", -1, -1, "0", "false" },
    {38, 18, "-99999999999999999999.999999996181439726", -1, -1, "-99999999999999999999", "false" },
    {38, 18, "-99999999999999999998.674343102485472865", -1, -1, "-99999999999999999998", "false" },
    {38, 18, "-99999985213503847943.260724790619117067", -1, -1, "-99999985213503847943", "false" },
    {38, 18, "-99999999999999999746.153066165741032094", -1, -1, "-99999999999999999746", "false" },
    {38, 18, "3.33885E-13", -1, -1, "0", "false" },
    {38, 18, "0.000002221925784805", -1, -1, "0", "false" },
    {38, 18, "894057136531864.643880311884414772", -1, -1, "894057136531864", "false" },
    {38, 18, "-99999999999999999999.302094236862342294", -1, -1, "-99999999999999999999", "false" },
    {38, 18, "126359.067352239977331563", -1, -1, "126359", "false" },
    {38, 18, "5.295006737345742281", -1, -1, "5", "false" },
    {38, 18, "-99999999999999999903.458427019726993629", -1, -1, "-99999999999999999903", "false" },
    {38, 18, "64809583448.092506189650501798", -1, -1, "64809583448", "false" },
    {38, 18, "92.303188133481818955", -1, -1, "92", "false" },
    {38, 18, "-99999999999999999999.999999999999999927", -1, -1, "-99999999999999999999", "false" },
    {38, 18, "-99963737894508903914.752572213729788821", -1, -1, "-99963737894508903914", "false" },
    {38, 18, "-99999999999999999999.718052095251938943", -1, -1, "-99999999999999999999", "false" },
    {38, 18, "274945712521829.458862660761546748", -1, -1, "274945712521829", "false" },
    {38, 18, "-99999999960925945163.764214456471355166", -1, -1, "-99999999960925945163", "false" }
    };
    test_cast_all<TYPE_DECIMAL128, TYPE_LARGEINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal128p35s30ToBooleanNormal) {
    CastTestCaseArray test_cases = {
    {35, 30, "-99999.999999999999999999999999259749", -1, -1, "true", "false" },
    {35, 30, "-99999.999999999999896141969772254148", -1, -1, "true", "false" },
    {35, 30, "79393.643646378595080312618284929465", -1, -1, "true", "false" },
    {35, 30, "-99999.999999700617644490478356310968", -1, -1, "true", "false" },
    {35, 30, "0.935488688208659010274586871194", -1, -1, "true", "false" },
    {35, 30, "-99999.999999980389063573122437555527", -1, -1, "true", "false" },
    {35, 30, "3.693672434433211853E-12", -1, -1, "true", "false" },
    {35, 30, "41183.460469231731687303715884107428", -1, -1, "true", "false" },
    {35, 30, "99129.955064378830452517168274083191", -1, -1, "true", "false" },
    {35, 30, "1.647380487E-21", -1, -1, "true", "false" },
    {35, 30, "-99999.999999999999999999999999972183", -1, -1, "true", "false" },
    {35, 30, "0.000055192744360893141882495052", -1, -1, "true", "false" },
    {35, 30, "43.871732941731590323756915380853", -1, -1, "true", "false" },
    {35, 30, "-99999.999999999999999699198363676649", -1, -1, "true", "false" },
    {35, 30, "-99999.999999999999999959433806792539", -1, -1, "true", "false" },
    {35, 30, "-99999.996124671479627405174451847012", -1, -1, "true", "false" },
    {35, 30, "2.708841945361724687113E-9", -1, -1, "true", "false" },
    {35, 30, "-99999.999999999999998465003346793330", -1, -1, "true", "false" },
    {35, 30, "-99999.999999999999999999996720437604", -1, -1, "true", "false" },
    {35, 30, "-99999.999999999999999999999999731190", -1, -1, "true", "false" }
    };
    test_cast_all<TYPE_DECIMAL128, TYPE_BOOLEAN>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal128p35s30ToTinyIntAbnormal) {
    CastTestCaseArray test_cases = {
    {35, 30, "34629.858316951507002687058663746799", -1, -1, "", "true" },
    {35, 30, "41183.460469231731687303715884107428", -1, -1, "", "true" },
    {35, 30, "-99999.999999999999999121998067468019", -1, -1, "", "true" },
    {35, 30, "74912.426008530118110515974117560618", -1, -1, "", "true" },
    {35, 30, "-99999.999999999990126267847847000660", -1, -1, "", "true" },
    {35, 30, "-99999.999998482850274010943175755873", -1, -1, "", "true" },
    {35, 30, "-99999.999999999228872822242976660256", -1, -1, "", "true" },
    {35, 30, "-99999.999999999999999999999977682206", -1, -1, "", "true" },
    {35, 30, "-95285.252249896993340824054484525772", -1, -1, "", "true" },
    {35, 30, "-99163.968671000213709889840243923428", -1, -1, "", "true" },
    {35, 30, "956.675260027652655012074928603421", -1, -1, "", "true" },
    {35, 30, "-99999.999999999999999999740706178403", -1, -1, "", "true" },
    {35, 30, "-99999.997694295600180378444011558709", -1, -1, "", "true" },
    {35, 30, "-99999.999999999999999999991606477515", -1, -1, "", "true" }
    };
    test_cast_all_fail<TYPE_DECIMAL128, TYPE_TINYINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal128p35s30ToTinyIntNormal) {
    CastTestCaseArray test_cases = {
    {35, 30, "7.513596862976318229E-12", -1, -1, "0", "false" },
    {35, 30, "9.5603786308592772E-14", -1, -1, "0", "false" },
    {35, 30, "0.000006191105338139865655570641", -1, -1, "0", "false" },
    {35, 30, "0.271258184425695197484011175651", -1, -1, "0", "false" },
    {35, 30, "3.516253113139113551E-12", -1, -1, "0", "false" },
    {35, 30, "11.379317982244273399850333391489", -1, -1, "11", "false" }
    };
    test_cast_all<TYPE_DECIMAL128, TYPE_TINYINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal128p35s30ToSmallIntAbnormal) {
    CastTestCaseArray test_cases = {
    {35, 30, "-99999.999987863709855934840515432147", -1, -1, "", "true" },
    {35, 30, "-99999.999999999999999986980193703639", -1, -1, "", "true" },
    {35, 30, "-99999.999999999999999999999999999233", -1, -1, "", "true" },
    {35, 30, "-99999.731482870696159603017247195821", -1, -1, "", "true" },
    {35, 30, "-99999.999999999987815171070130232657", -1, -1, "", "true" },
    {35, 30, "-99999.999999999999999999999999886723", -1, -1, "", "true" },
    {35, 30, "-99999.999999999999999999999999961393", -1, -1, "", "true" },
    {35, 30, "-99999.990644528725307247815376194059", -1, -1, "", "true" },
    {35, 30, "-99999.999999999999999804989713761637", -1, -1, "", "true" },
    {35, 30, "-99999.997671487209662495874335820429", -1, -1, "", "true" },
    {35, 30, "-99999.999999999999999983438255026811", -1, -1, "", "true" }
    };
    test_cast_all_fail<TYPE_DECIMAL128, TYPE_SMALLINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal128p35s30ToSmallIntNormal) {
    CastTestCaseArray test_cases = {
    {35, 30, "6.896495411176E-18", -1, -1, "0", "false" },
    {35, 30, "4.5642921757E-20", -1, -1, "0", "false" },
    {35, 30, "2.52060E-25", -1, -1, "0", "false" },
    {35, 30, "3.798420E-24", -1, -1, "0", "false" },
    {35, 30, "1.41965905786879E-16", -1, -1, "0", "false" },
    {35, 30, "2.46123006545707114686136E-7", -1, -1, "0", "false" },
    {35, 30, "0.572747461294498969978631266337", -1, -1, "0", "false" },
    {35, 30, "0.000001148661844081626881977030", -1, -1, "0", "false" },
    {35, 30, "6.2664927250581100482434E-8", -1, -1, "0", "false" }
    };
    test_cast_all<TYPE_DECIMAL128, TYPE_SMALLINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal128p35s30ToIntNormal) {
    CastTestCaseArray test_cases = {
    {35, 30, "-9081.624515877641787522938824314058", -1, -1, "-9081", "false" },
    {35, 30, "-99999.999999999999999999999999999998", -1, -1, "-99999", "false" },
    {35, 30, "1.5703472226767648E-14", -1, -1, "0", "false" },
    {35, 30, "-99999.999486832796910875409314021954", -1, -1, "-99999", "false" },
    {35, 30, "-99999.999999999708798635120919731454", -1, -1, "-99999", "false" },
    {35, 30, "-99999.999999999999999999999996521501", -1, -1, "-99999", "false" },
    {35, 30, "9.4958329E-23", -1, -1, "0", "false" },
    {35, 30, "-99999.999999999999999999925527201628", -1, -1, "-99999", "false" },
    {35, 30, "-47115.171243334990325248300535814707", -1, -1, "-47115", "false" },
    {35, 30, "5.61652E-25", -1, -1, "0", "false" },
    {35, 30, "34725.598786223904782074216952663671", -1, -1, "34725", "false" },
    {35, 30, "-99999.999999999999890110788052138791", -1, -1, "-99999", "false" },
    {35, 30, "-99917.908514117550601495190041500521", -1, -1, "-99917", "false" },
    {35, 30, "5.119281970364E-18", -1, -1, "0", "false" },
    {35, 30, "-99999.999999999999998882982676552047", -1, -1, "-99999", "false" },
    {35, 30, "1.73447562896711200604E-10", -1, -1, "0", "false" },
    {35, 30, "-99999.999999999999999999999999999993", -1, -1, "-99999", "false" },
    {35, 30, "0.000254506323734907643544099246", -1, -1, "0", "false" },
    {35, 30, "-99999.999999999999999999999999999500", -1, -1, "-99999", "false" },
    {35, 30, "1978.634809862342265658642324798261", -1, -1, "1978", "false" }
    };
    test_cast_all<TYPE_DECIMAL128, TYPE_INT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal128p35s30ToBigIntNormal) {
    CastTestCaseArray test_cases = {
    {35, 30, "-99999.999999999999999999999999999946", -1, -1, "-99999", "false" },
    {35, 30, "29472.531335250180474796517807203563", -1, -1, "29472", "false" },
    {35, 30, "-99999.999999999999393882002473717293", -1, -1, "-99999", "false" },
    {35, 30, "5.4956042729026059470E-11", -1, -1, "0", "false" },
    {35, 30, "-99999.999999999999999999999999549406", -1, -1, "-99999", "false" },
    {35, 30, "4.21322E-25", -1, -1, "0", "false" },
    {35, 30, "4.508154108E-21", -1, -1, "0", "false" },
    {35, 30, "1E-30", -1, -1, "0", "false" },
    {35, 30, "3.960090844784E-18", -1, -1, "0", "false" },
    {35, 30, "-99589.302487439810947879209265926333", -1, -1, "-99589", "false" },
    {35, 30, "4.114871801E-21", -1, -1, "0", "false" },
    {35, 30, "2.28E-28", -1, -1, "0", "false" },
    {35, 30, "0.000001012417622590721306835381", -1, -1, "0", "false" },
    {35, 30, "9.9595499465184330876E-11", -1, -1, "0", "false" },
    {35, 30, "-99999.999999999999999999999999999986", -1, -1, "-99999", "false" },
    {35, 30, "-99999.999999999999999999991552372097", -1, -1, "-99999", "false" },
    {35, 30, "1.4674E-26", -1, -1, "0", "false" },
    {35, 30, "-99999.999999999999999999999999999995", -1, -1, "-99999", "false" },
    {35, 30, "3.989516356534E-18", -1, -1, "0", "false" },
    {35, 30, "-99999.999999999999999997898880853714", -1, -1, "-99999", "false" }
    };
    test_cast_all<TYPE_DECIMAL128, TYPE_BIGINT>(test_cases);
}

TEST_F(VectorizedDecimalCastExprIntegerTest, testCastFromDecimal128p35s30ToLargeIntNormal) {
    CastTestCaseArray test_cases = {
    {35, 30, "7.692042384E-21", -1, -1, "0", "false" },
    {35, 30, "-99999.999999999999928498575340880311", -1, -1, "-99999", "false" },
    {35, 30, "6.4955488400302870771E-11", -1, -1, "0", "false" },
    {35, 30, "-99999.999999999999999999999456841194", -1, -1, "-99999", "false" },
    {35, 30, "-99999.999999999999993911379158512202", -1, -1, "-99999", "false" },
    {35, 30, "-99999.960601030402382662090307833174", -1, -1, "-99999", "false" },
    {35, 30, "-99999.999999998151580494605621761429", -1, -1, "-99999", "false" },
    {35, 30, "-99999.999999985540041417047829397147", -1, -1, "-99999", "false" },
    {35, 30, "1.2653479E-23", -1, -1, "0", "false" },
    {35, 30, "28357.876236946634025673157943095095", -1, -1, "28357", "false" },
    {35, 30, "0.009619108004301672012649578041", -1, -1, "0", "false" },
    {35, 30, "-99999.999999999998875850403643361682", -1, -1, "-99999", "false" },
    {35, 30, "-99999.999999999999999999999999999966", -1, -1, "-99999", "false" },
    {35, 30, "-99999.999999999999999248906502878607", -1, -1, "-99999", "false" },
    {35, 30, "-99999.999999999999999999946456960108", -1, -1, "-99999", "false" },
    {35, 30, "1.91415164174571790017024E-7", -1, -1, "0", "false" },
    {35, 30, "-99999.999999999999999999767760368331", -1, -1, "-99999", "false" },
    {35, 30, "-99999.999999993274729348185262817533", -1, -1, "-99999", "false" },
    {35, 30, "-99999.999918234138678497038055437288", -1, -1, "-99999", "false" },
    {35, 30, "1.195E-27", -1, -1, "0", "false" }
    };
    test_cast_all<TYPE_DECIMAL128, TYPE_LARGEINT>(test_cases);
}